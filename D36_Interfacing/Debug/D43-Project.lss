
D43-Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001024  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000046  00800060  00001024  000010b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001c  008000a6  008000a6  000010fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001130  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001727  00000000  00000000  000012ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000980  00000000  00000000  000029d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c6e  00000000  00000000  00003353  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000254  00000000  00000000  00003fc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b8  00000000  00000000  00004218  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b58  00000000  00000000  000047d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00005328  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 11 02 	jmp	0x422	; 0x422 <__vector_9>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__floatsisf+0x36>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <main+0x76>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <Ultrasonic_Ping+0x50>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <Motor_Forward+0x8>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e4 e2       	ldi	r30, 0x24	; 36
     162:	f0 e1       	ldi	r31, 0x10	; 16
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a6 3a       	cpi	r26, 0xA6	; 166
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a6 ea       	ldi	r26, 0xA6	; 166
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a2 3c       	cpi	r26, 0xC2	; 194
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 12 03 	call	0x624	; 0x624 <main>
     184:	0c 94 10 08 	jmp	0x1020	; 0x1020 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <Motor_Init>:
 *  Author: Ahmed Yasser
 */ 
#include "L298N.h"

void Motor_Init(void){
	SetBit(DDRC_Reg, H4);
     18c:	a6 9a       	sbi	0x14, 6	; 20
	SetBit(DDRC_Reg, H3);
     18e:	a5 9a       	sbi	0x14, 5	; 20
	SetBit(DDRC_Reg, H2);
     190:	a4 9a       	sbi	0x14, 4	; 20
	SetBit(DDRC_Reg, H1);
     192:	a3 9a       	sbi	0x14, 3	; 20
	ClearBit(PORTC_Reg, H4);
     194:	ae 98       	cbi	0x15, 6	; 21
	ClearBit(PORTC_Reg, H3);
     196:	ad 98       	cbi	0x15, 5	; 21
	ClearBit(PORTC_Reg, H2);
     198:	ac 98       	cbi	0x15, 4	; 21
	ClearBit(PORTC_Reg, H1);
     19a:	ab 98       	cbi	0x15, 3	; 21
     19c:	08 95       	ret

0000019e <Motor_Left>:
}

void Motor_Left(void){
	SetBit(PORTC_Reg, H1);
     19e:	ab 9a       	sbi	0x15, 3	; 21
	ClearBit(PORTC_Reg, H3);
     1a0:	ad 98       	cbi	0x15, 5	; 21
	ClearBit(PORTC_Reg, H2);
     1a2:	ac 98       	cbi	0x15, 4	; 21
	ClearBit(PORTC_Reg, H4);
     1a4:	ae 98       	cbi	0x15, 6	; 21
     1a6:	08 95       	ret

000001a8 <Motor_Right>:
}
void Motor_Right(void){
	ClearBit(PORTC_Reg, H2);
     1a8:	ac 98       	cbi	0x15, 4	; 21
	SetBit(PORTC_Reg, H4);
     1aa:	ae 9a       	sbi	0x15, 6	; 21
	ClearBit(PORTC_Reg, H3);
     1ac:	ad 98       	cbi	0x15, 5	; 21
	ClearBit(PORTC_Reg, H1);
     1ae:	ab 98       	cbi	0x15, 3	; 21
     1b0:	08 95       	ret

000001b2 <Motor_Forward>:
}
void Motor_Forward(void){
	SetBit(PORTC_Reg, H4);
     1b2:	ae 9a       	sbi	0x15, 6	; 21
	SetBit(PORTC_Reg, H1);
     1b4:	ab 9a       	sbi	0x15, 3	; 21
	ClearBit(PORTC_Reg, H3);
     1b6:	ad 98       	cbi	0x15, 5	; 21
	ClearBit(PORTC_Reg, H2);
     1b8:	ac 98       	cbi	0x15, 4	; 21
     1ba:	08 95       	ret

000001bc <Motor_Stop>:
}
void Motor_Stop(void){
	
	ClearBit(PORTC_Reg, H3);
     1bc:	ad 98       	cbi	0x15, 5	; 21
	ClearBit(PORTC_Reg, H1);
     1be:	ab 98       	cbi	0x15, 3	; 21
	ClearBit(PORTC_Reg, H4);
     1c0:	ae 98       	cbi	0x15, 6	; 21
	ClearBit(PORTC_Reg, H2);
     1c2:	ac 98       	cbi	0x15, 4	; 21
     1c4:	08 95       	ret

000001c6 <Motor_BackWard>:
}
void Motor_BackWard(void){
	SetBit(PORTC_Reg, H3);
     1c6:	ad 9a       	sbi	0x15, 5	; 21
	SetBit(PORTC_Reg, H2);
     1c8:	ac 9a       	sbi	0x15, 4	; 21
	ClearBit(PORTC_Reg, H4);
     1ca:	ae 98       	cbi	0x15, 6	; 21
	ClearBit(PORTC_Reg, H1);
     1cc:	ab 98       	cbi	0x15, 3	; 21
     1ce:	08 95       	ret

000001d0 <LCD_Command>:
     1d0:	9b b3       	in	r25, 0x1b	; 27
     1d2:	9f 70       	andi	r25, 0x0F	; 15
     1d4:	28 2f       	mov	r18, r24
     1d6:	20 7f       	andi	r18, 0xF0	; 240
     1d8:	92 2b       	or	r25, r18
     1da:	9b bb       	out	0x1b, r25	; 27
     1dc:	c1 98       	cbi	0x18, 1	; 24
     1de:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e0:	35 e0       	ldi	r19, 0x05	; 5
     1e2:	3a 95       	dec	r19
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <LCD_Command+0x12>
     1e6:	00 00       	nop
     1e8:	c3 98       	cbi	0x18, 3	; 24
     1ea:	ef e1       	ldi	r30, 0x1F	; 31
     1ec:	f3 e0       	ldi	r31, 0x03	; 3
     1ee:	31 97       	sbiw	r30, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_Command+0x1e>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_Command+0x24>
     1f4:	00 00       	nop
     1f6:	2b b3       	in	r18, 0x1b	; 27
     1f8:	2f 70       	andi	r18, 0x0F	; 15
     1fa:	f0 e1       	ldi	r31, 0x10	; 16
     1fc:	8f 9f       	mul	r24, r31
     1fe:	c0 01       	movw	r24, r0
     200:	11 24       	eor	r1, r1
     202:	82 2b       	or	r24, r18
     204:	8b bb       	out	0x1b, r24	; 27
     206:	c3 9a       	sbi	0x18, 3	; 24
     208:	35 e0       	ldi	r19, 0x05	; 5
     20a:	3a 95       	dec	r19
     20c:	f1 f7       	brne	.-4      	; 0x20a <LCD_Command+0x3a>
     20e:	00 00       	nop
     210:	c3 98       	cbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     212:	8f e3       	ldi	r24, 0x3F	; 63
     214:	9f e1       	ldi	r25, 0x1F	; 31
     216:	01 97       	sbiw	r24, 0x01	; 1
     218:	f1 f7       	brne	.-4      	; 0x216 <LCD_Command+0x46>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <LCD_Command+0x4c>
     21c:	00 00       	nop
     21e:	08 95       	ret

00000220 <LCD_Char>:
     220:	9b b3       	in	r25, 0x1b	; 27
     222:	9f 70       	andi	r25, 0x0F	; 15
     224:	28 2f       	mov	r18, r24
     226:	20 7f       	andi	r18, 0xF0	; 240
     228:	92 2b       	or	r25, r18
     22a:	9b bb       	out	0x1b, r25	; 27
     22c:	c1 9a       	sbi	0x18, 1	; 24
     22e:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     230:	35 e0       	ldi	r19, 0x05	; 5
     232:	3a 95       	dec	r19
     234:	f1 f7       	brne	.-4      	; 0x232 <LCD_Char+0x12>
     236:	00 00       	nop
     238:	c3 98       	cbi	0x18, 3	; 24
     23a:	ef e1       	ldi	r30, 0x1F	; 31
     23c:	f3 e0       	ldi	r31, 0x03	; 3
     23e:	31 97       	sbiw	r30, 0x01	; 1
     240:	f1 f7       	brne	.-4      	; 0x23e <LCD_Char+0x1e>
     242:	00 c0       	rjmp	.+0      	; 0x244 <LCD_Char+0x24>
     244:	00 00       	nop
     246:	2b b3       	in	r18, 0x1b	; 27
     248:	2f 70       	andi	r18, 0x0F	; 15
     24a:	f0 e1       	ldi	r31, 0x10	; 16
     24c:	8f 9f       	mul	r24, r31
     24e:	c0 01       	movw	r24, r0
     250:	11 24       	eor	r1, r1
     252:	82 2b       	or	r24, r18
     254:	8b bb       	out	0x1b, r24	; 27
     256:	c3 9a       	sbi	0x18, 3	; 24
     258:	35 e0       	ldi	r19, 0x05	; 5
     25a:	3a 95       	dec	r19
     25c:	f1 f7       	brne	.-4      	; 0x25a <LCD_Char+0x3a>
     25e:	00 00       	nop
     260:	c3 98       	cbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     262:	8f e3       	ldi	r24, 0x3F	; 63
     264:	9f e1       	ldi	r25, 0x1F	; 31
     266:	01 97       	sbiw	r24, 0x01	; 1
     268:	f1 f7       	brne	.-4      	; 0x266 <LCD_Char+0x46>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <LCD_Char+0x4c>
     26c:	00 00       	nop
     26e:	08 95       	ret

00000270 <LCD_Init>:
     270:	8f ef       	ldi	r24, 0xFF	; 255
     272:	8a bb       	out	0x1a, r24	; 26
     274:	b9 9a       	sbi	0x17, 1	; 23
     276:	ba 9a       	sbi	0x17, 2	; 23
     278:	bb 9a       	sbi	0x17, 3	; 23
     27a:	c2 98       	cbi	0x18, 2	; 24
     27c:	2f ef       	ldi	r18, 0xFF	; 255
     27e:	89 ef       	ldi	r24, 0xF9	; 249
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	21 50       	subi	r18, 0x01	; 1
     284:	80 40       	sbci	r24, 0x00	; 0
     286:	90 40       	sbci	r25, 0x00	; 0
     288:	e1 f7       	brne	.-8      	; 0x282 <LCD_Init+0x12>
     28a:	00 c0       	rjmp	.+0      	; 0x28c <LCD_Init+0x1c>
     28c:	00 00       	nop
     28e:	82 e0       	ldi	r24, 0x02	; 2
     290:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     294:	88 e2       	ldi	r24, 0x28	; 40
     296:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     29a:	8c e0       	ldi	r24, 0x0C	; 12
     29c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     2a0:	86 e0       	ldi	r24, 0x06	; 6
     2a2:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     2ac:	8f e3       	ldi	r24, 0x3F	; 63
     2ae:	9f e1       	ldi	r25, 0x1F	; 31
     2b0:	01 97       	sbiw	r24, 0x01	; 1
     2b2:	f1 f7       	brne	.-4      	; 0x2b0 <LCD_Init+0x40>
     2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <LCD_Init+0x46>
     2b6:	00 00       	nop
     2b8:	08 95       	ret

000002ba <LCD_String>:
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	ec 01       	movw	r28, r24
     2c0:	88 81       	ld	r24, Y
     2c2:	88 23       	and	r24, r24
     2c4:	31 f0       	breq	.+12     	; 0x2d2 <LCD_String+0x18>
     2c6:	21 96       	adiw	r28, 0x01	; 1
     2c8:	0e 94 10 01 	call	0x220	; 0x220 <LCD_Char>
     2cc:	89 91       	ld	r24, Y+
     2ce:	81 11       	cpse	r24, r1
     2d0:	fb cf       	rjmp	.-10     	; 0x2c8 <LCD_String+0xe>
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <LCD_String_Pos>:
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	ea 01       	movw	r28, r20
     2de:	81 11       	cpse	r24, r1
     2e0:	08 c0       	rjmp	.+16     	; 0x2f2 <LCD_String_Pos+0x1a>
     2e2:	60 31       	cpi	r22, 0x10	; 16
     2e4:	78 f4       	brcc	.+30     	; 0x304 <LCD_String_Pos+0x2c>
     2e6:	86 2f       	mov	r24, r22
     2e8:	8f 70       	andi	r24, 0x0F	; 15
     2ea:	80 68       	ori	r24, 0x80	; 128
     2ec:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     2f0:	09 c0       	rjmp	.+18     	; 0x304 <LCD_String_Pos+0x2c>
     2f2:	81 30       	cpi	r24, 0x01	; 1
     2f4:	39 f4       	brne	.+14     	; 0x304 <LCD_String_Pos+0x2c>
     2f6:	60 31       	cpi	r22, 0x10	; 16
     2f8:	28 f4       	brcc	.+10     	; 0x304 <LCD_String_Pos+0x2c>
     2fa:	86 2f       	mov	r24, r22
     2fc:	8f 70       	andi	r24, 0x0F	; 15
     2fe:	80 6c       	ori	r24, 0xC0	; 192
     300:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     304:	ce 01       	movw	r24, r28
     306:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_String>
     30a:	df 91       	pop	r29
     30c:	cf 91       	pop	r28
     30e:	08 95       	ret

00000310 <LCD_Clear>:
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     316:	8f e3       	ldi	r24, 0x3F	; 63
     318:	9f e1       	ldi	r25, 0x1F	; 31
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_Clear+0xa>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_Clear+0x10>
     320:	00 00       	nop
     322:	80 e8       	ldi	r24, 0x80	; 128
     324:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Command>
     328:	08 95       	ret

0000032a <Servo_Init>:
     32a:	9c 01       	movw	r18, r24
     32c:	1f bc       	out	0x2f, r1	; 47
     32e:	1e bc       	out	0x2e, r1	; 46
     330:	9f b5       	in	r25, 0x2f	; 47
     332:	92 60       	ori	r25, 0x02	; 2
     334:	9f bd       	out	0x2f, r25	; 47
     336:	9f b5       	in	r25, 0x2f	; 47
     338:	90 68       	ori	r25, 0x80	; 128
     33a:	9f bd       	out	0x2f, r25	; 47
     33c:	9e b5       	in	r25, 0x2e	; 46
     33e:	92 60       	ori	r25, 0x02	; 2
     340:	9e bd       	out	0x2e, r25	; 46
     342:	9e b5       	in	r25, 0x2e	; 46
     344:	98 60       	ori	r25, 0x08	; 8
     346:	9e bd       	out	0x2e, r25	; 46
     348:	9e b5       	in	r25, 0x2e	; 46
     34a:	90 61       	ori	r25, 0x10	; 16
     34c:	9e bd       	out	0x2e, r25	; 46
     34e:	8f e3       	ldi	r24, 0x3F	; 63
     350:	9c e9       	ldi	r25, 0x9C	; 156
     352:	97 bd       	out	0x27, r25	; 39
     354:	86 bd       	out	0x26, r24	; 38
     356:	1d bc       	out	0x2d, r1	; 45
     358:	1c bc       	out	0x2c, r1	; 44
     35a:	8d 9a       	sbi	0x11, 5	; 17
     35c:	3b bd       	out	0x2b, r19	; 43
     35e:	2a bd       	out	0x2a, r18	; 42
     360:	08 95       	ret

00000362 <Ultrasonic_Init>:
     362:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <TimerOvf+0x1>
     366:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <TimerOvf>
     36a:	be 9a       	sbi	0x17, 6	; 23
     36c:	8e 98       	cbi	0x11, 6	; 17
     36e:	78 94       	sei
     370:	89 b7       	in	r24, 0x39	; 57
     372:	84 60       	ori	r24, 0x04	; 4
     374:	89 bf       	out	0x39, r24	; 57
     376:	1f bc       	out	0x2f, r1	; 47
     378:	1e bc       	out	0x2e, r1	; 46
     37a:	08 95       	ret

0000037c <Ultrasonic_Ping>:
     37c:	c6 9a       	sbi	0x18, 6	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     37e:	85 e3       	ldi	r24, 0x35	; 53
     380:	8a 95       	dec	r24
     382:	f1 f7       	brne	.-4      	; 0x380 <Ultrasonic_Ping+0x4>
     384:	00 00       	nop
     386:	c6 98       	cbi	0x18, 6	; 24
     388:	1d bc       	out	0x2d, r1	; 45
     38a:	1c bc       	out	0x2c, r1	; 44
     38c:	8e b5       	in	r24, 0x2e	; 46
     38e:	80 64       	ori	r24, 0x40	; 64
     390:	8e bd       	out	0x2e, r24	; 46
     392:	8e b5       	in	r24, 0x2e	; 46
     394:	81 60       	ori	r24, 0x01	; 1
     396:	8e bd       	out	0x2e, r24	; 46
     398:	88 b7       	in	r24, 0x38	; 56
     39a:	80 62       	ori	r24, 0x20	; 32
     39c:	88 bf       	out	0x38, r24	; 56
     39e:	88 b7       	in	r24, 0x38	; 56
     3a0:	84 60       	ori	r24, 0x04	; 4
     3a2:	88 bf       	out	0x38, r24	; 56
     3a4:	08 b6       	in	r0, 0x38	; 56
     3a6:	05 fe       	sbrs	r0, 5
     3a8:	fd cf       	rjmp	.-6      	; 0x3a4 <Ultrasonic_Ping+0x28>
     3aa:	1d bc       	out	0x2d, r1	; 45
     3ac:	1c bc       	out	0x2c, r1	; 44
     3ae:	8e b5       	in	r24, 0x2e	; 46
     3b0:	8f 7b       	andi	r24, 0xBF	; 191
     3b2:	8e bd       	out	0x2e, r24	; 46
     3b4:	8e b5       	in	r24, 0x2e	; 46
     3b6:	81 60       	ori	r24, 0x01	; 1
     3b8:	8e bd       	out	0x2e, r24	; 46
     3ba:	88 b7       	in	r24, 0x38	; 56
     3bc:	80 62       	ori	r24, 0x20	; 32
     3be:	88 bf       	out	0x38, r24	; 56
     3c0:	88 b7       	in	r24, 0x38	; 56
     3c2:	84 60       	ori	r24, 0x04	; 4
     3c4:	88 bf       	out	0x38, r24	; 56
     3c6:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <TimerOvf+0x1>
     3ca:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <TimerOvf>
     3ce:	08 b6       	in	r0, 0x38	; 56
     3d0:	05 fe       	sbrs	r0, 5
     3d2:	fd cf       	rjmp	.-6      	; 0x3ce <Ultrasonic_Ping+0x52>
     3d4:	46 b5       	in	r20, 0x26	; 38
     3d6:	57 b5       	in	r21, 0x27	; 39
     3d8:	a0 91 aa 00 	lds	r26, 0x00AA	; 0x8000aa <TimerOvf>
     3dc:	b0 91 ab 00 	lds	r27, 0x00AB	; 0x8000ab <TimerOvf+0x1>
     3e0:	2f ef       	ldi	r18, 0xFF	; 255
     3e2:	3f ef       	ldi	r19, 0xFF	; 255
     3e4:	0e 94 71 05 	call	0xae2	; 0xae2 <__usmulhisi3>
     3e8:	64 0f       	add	r22, r20
     3ea:	75 1f       	adc	r23, r21
     3ec:	81 1d       	adc	r24, r1
     3ee:	91 1d       	adc	r25, r1
     3f0:	60 93 ac 00 	sts	0x00AC, r22	; 0x8000ac <count>
     3f4:	70 93 ad 00 	sts	0x00AD, r23	; 0x8000ad <count+0x1>
     3f8:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <count+0x2>
     3fc:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <count+0x3>
     400:	0e 94 bc 04 	call	0x978	; 0x978 <__floatsisf>
     404:	2d ec       	ldi	r18, 0xCD	; 205
     406:	3c e3       	ldi	r19, 0x3C	; 60
     408:	49 e6       	ldi	r20, 0x69	; 105
     40a:	54 e4       	ldi	r21, 0x44	; 68
     40c:	0e 94 12 04 	call	0x824	; 0x824 <__divsf3>
     410:	60 93 a6 00 	sts	0x00A6, r22	; 0x8000a6 <__data_end>
     414:	70 93 a7 00 	sts	0x00A7, r23	; 0x8000a7 <__data_end+0x1>
     418:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__data_end+0x2>
     41c:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__data_end+0x3>
     420:	08 95       	ret

00000422 <__vector_9>:
     422:	1f 92       	push	r1
     424:	0f 92       	push	r0
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	0f 92       	push	r0
     42a:	11 24       	eor	r1, r1
     42c:	8f 93       	push	r24
     42e:	9f 93       	push	r25
     430:	80 91 aa 00 	lds	r24, 0x00AA	; 0x8000aa <TimerOvf>
     434:	90 91 ab 00 	lds	r25, 0x00AB	; 0x8000ab <TimerOvf+0x1>
     438:	01 96       	adiw	r24, 0x01	; 1
     43a:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <TimerOvf+0x1>
     43e:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <TimerOvf>
     442:	9f 91       	pop	r25
     444:	8f 91       	pop	r24
     446:	0f 90       	pop	r0
     448:	0f be       	out	0x3f, r0	; 63
     44a:	0f 90       	pop	r0
     44c:	1f 90       	pop	r1
     44e:	18 95       	reti

00000450 <readPing>:
	int cm = readPing();
	_delay_ms(100);
	Servo_Init(straight);
	return cm;
}
double readPing(void){
     450:	0f 93       	push	r16
     452:	1f 93       	push	r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     454:	2f ef       	ldi	r18, 0xFF	; 255
     456:	8a e6       	ldi	r24, 0x6A	; 106
     458:	93 e0       	ldi	r25, 0x03	; 3
     45a:	21 50       	subi	r18, 0x01	; 1
     45c:	80 40       	sbci	r24, 0x00	; 0
     45e:	90 40       	sbci	r25, 0x00	; 0
     460:	e1 f7       	brne	.-8      	; 0x45a <readPing+0xa>
     462:	00 c0       	rjmp	.+0      	; 0x464 <readPing+0x14>
     464:	00 00       	nop
	_delay_ms(70);
	Ultrasonic_Init();
     466:	0e 94 b1 01 	call	0x362	; 0x362 <Ultrasonic_Init>
	Ultrasonic_Ping();
     46a:	0e 94 be 01 	call	0x37c	; 0x37c <Ultrasonic_Ping>
	dtostrf(distance, 2, 2, string);
     46e:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__data_end>
     472:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__data_end+0x1>
     476:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <__data_end+0x2>
     47a:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <__data_end+0x3>
     47e:	00 eb       	ldi	r16, 0xB0	; 176
     480:	10 e0       	ldi	r17, 0x00	; 0
     482:	22 e0       	ldi	r18, 0x02	; 2
     484:	42 e0       	ldi	r20, 0x02	; 2
     486:	0e 94 87 05 	call	0xb0e	; 0xb0e <dtostrf>
	LCD_String_Pos(0, 0, "Dist = ");
     48a:	4a e6       	ldi	r20, 0x6A	; 106
     48c:	50 e0       	ldi	r21, 0x00	; 0
     48e:	60 e0       	ldi	r22, 0x00	; 0
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_String_Pos>
	LCD_String_Pos(0, 7, string);
     496:	a8 01       	movw	r20, r16
     498:	67 e0       	ldi	r22, 0x07	; 7
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_String_Pos>
	return distance;
     4a0:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__data_end>
     4a4:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__data_end+0x1>
     4a8:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <__data_end+0x2>
     4ac:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <__data_end+0x3>
}
     4b0:	1f 91       	pop	r17
     4b2:	0f 91       	pop	r16
     4b4:	08 95       	ret

000004b6 <lookright>:
		dist = readPing();
	} 
	
}

double lookright(void){
     4b6:	cf 92       	push	r12
     4b8:	df 92       	push	r13
     4ba:	ef 92       	push	r14
     4bc:	ff 92       	push	r15
	Servo_Init(right);
     4be:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <right>
     4c2:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <right+0x1>
     4c6:	0e 94 95 01 	call	0x32a	; 0x32a <Servo_Init>
     4ca:	2f ef       	ldi	r18, 0xFF	; 255
     4cc:	89 e6       	ldi	r24, 0x69	; 105
     4ce:	98 e1       	ldi	r25, 0x18	; 24
     4d0:	21 50       	subi	r18, 0x01	; 1
     4d2:	80 40       	sbci	r24, 0x00	; 0
     4d4:	90 40       	sbci	r25, 0x00	; 0
     4d6:	e1 f7       	brne	.-8      	; 0x4d0 <lookright+0x1a>
     4d8:	00 c0       	rjmp	.+0      	; 0x4da <lookright+0x24>
     4da:	00 00       	nop
	_delay_ms(500);
	int cm = readPing();
     4dc:	0e 94 28 02 	call	0x450	; 0x450 <readPing>
     4e0:	6b 01       	movw	r12, r22
     4e2:	7c 01       	movw	r14, r24
     4e4:	2f ef       	ldi	r18, 0xFF	; 255
     4e6:	81 ee       	ldi	r24, 0xE1	; 225
     4e8:	94 e0       	ldi	r25, 0x04	; 4
     4ea:	21 50       	subi	r18, 0x01	; 1
     4ec:	80 40       	sbci	r24, 0x00	; 0
     4ee:	90 40       	sbci	r25, 0x00	; 0
     4f0:	e1 f7       	brne	.-8      	; 0x4ea <lookright+0x34>
     4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <lookright+0x3e>
     4f4:	00 00       	nop
	_delay_ms(100);
	Servo_Init(straight);
     4f6:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <straight>
     4fa:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <straight+0x1>
     4fe:	0e 94 95 01 	call	0x32a	; 0x32a <Servo_Init>
	return cm;
     502:	c7 01       	movw	r24, r14
     504:	b6 01       	movw	r22, r12
     506:	0e 94 84 04 	call	0x908	; 0x908 <__fixsfsi>
     50a:	07 2e       	mov	r0, r23
     50c:	00 0c       	add	r0, r0
     50e:	88 0b       	sbc	r24, r24
     510:	99 0b       	sbc	r25, r25
     512:	0e 94 bc 04 	call	0x978	; 0x978 <__floatsisf>
}
     516:	ff 90       	pop	r15
     518:	ef 90       	pop	r14
     51a:	df 90       	pop	r13
     51c:	cf 90       	pop	r12
     51e:	08 95       	ret

00000520 <lookleft>:
double lookleft(void){
     520:	cf 92       	push	r12
     522:	df 92       	push	r13
     524:	ef 92       	push	r14
     526:	ff 92       	push	r15
	Servo_Init(left);
     528:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <left>
     52c:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <left+0x1>
     530:	0e 94 95 01 	call	0x32a	; 0x32a <Servo_Init>
     534:	2f ef       	ldi	r18, 0xFF	; 255
     536:	89 e6       	ldi	r24, 0x69	; 105
     538:	98 e1       	ldi	r25, 0x18	; 24
     53a:	21 50       	subi	r18, 0x01	; 1
     53c:	80 40       	sbci	r24, 0x00	; 0
     53e:	90 40       	sbci	r25, 0x00	; 0
     540:	e1 f7       	brne	.-8      	; 0x53a <lookleft+0x1a>
     542:	00 c0       	rjmp	.+0      	; 0x544 <lookleft+0x24>
     544:	00 00       	nop
	_delay_ms(500);
	int cm = readPing();
     546:	0e 94 28 02 	call	0x450	; 0x450 <readPing>
     54a:	6b 01       	movw	r12, r22
     54c:	7c 01       	movw	r14, r24
     54e:	2f ef       	ldi	r18, 0xFF	; 255
     550:	81 ee       	ldi	r24, 0xE1	; 225
     552:	94 e0       	ldi	r25, 0x04	; 4
     554:	21 50       	subi	r18, 0x01	; 1
     556:	80 40       	sbci	r24, 0x00	; 0
     558:	90 40       	sbci	r25, 0x00	; 0
     55a:	e1 f7       	brne	.-8      	; 0x554 <lookleft+0x34>
     55c:	00 c0       	rjmp	.+0      	; 0x55e <lookleft+0x3e>
     55e:	00 00       	nop
	_delay_ms(100);
	Servo_Init(straight);
     560:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <straight>
     564:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <straight+0x1>
     568:	0e 94 95 01 	call	0x32a	; 0x32a <Servo_Init>
	return cm;
     56c:	c7 01       	movw	r24, r14
     56e:	b6 01       	movw	r22, r12
     570:	0e 94 84 04 	call	0x908	; 0x908 <__fixsfsi>
     574:	07 2e       	mov	r0, r23
     576:	00 0c       	add	r0, r0
     578:	88 0b       	sbc	r24, r24
     57a:	99 0b       	sbc	r25, r25
     57c:	0e 94 bc 04 	call	0x978	; 0x978 <__floatsisf>
}
     580:	ff 90       	pop	r15
     582:	ef 90       	pop	r14
     584:	df 90       	pop	r13
     586:	cf 90       	pop	r12
     588:	08 95       	ret

0000058a <moveRight>:
	LCD_String_Pos(0, 0, "Dist = ");
	LCD_String_Pos(0, 7, string);
	return distance;
}
void moveRight(void){
	LCD_Clear();
     58a:	0e 94 88 01 	call	0x310	; 0x310 <LCD_Clear>
	LCD_String_Pos(1, 1, "TURNING RIGHT");
     58e:	42 e7       	ldi	r20, 0x72	; 114
     590:	50 e0       	ldi	r21, 0x00	; 0
     592:	61 e0       	ldi	r22, 0x01	; 1
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_String_Pos>
	Motor_Right();
     59a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <Motor_Right>
     59e:	2f ef       	ldi	r18, 0xFF	; 255
     5a0:	89 e6       	ldi	r24, 0x69	; 105
     5a2:	98 e1       	ldi	r25, 0x18	; 24
     5a4:	21 50       	subi	r18, 0x01	; 1
     5a6:	80 40       	sbci	r24, 0x00	; 0
     5a8:	90 40       	sbci	r25, 0x00	; 0
     5aa:	e1 f7       	brne	.-8      	; 0x5a4 <moveRight+0x1a>
     5ac:	00 c0       	rjmp	.+0      	; 0x5ae <moveRight+0x24>
     5ae:	00 00       	nop
	_delay_ms(500);
	Motor_Forward();
     5b0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Motor_Forward>
     5b4:	08 95       	ret

000005b6 <moveLeft>:
}
void moveLeft(void){
	LCD_Clear();
     5b6:	0e 94 88 01 	call	0x310	; 0x310 <LCD_Clear>
	LCD_String_Pos(1, 1, "TURNING LEFT");
     5ba:	40 e8       	ldi	r20, 0x80	; 128
     5bc:	50 e0       	ldi	r21, 0x00	; 0
     5be:	61 e0       	ldi	r22, 0x01	; 1
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_String_Pos>
	Motor_Left();
     5c6:	0e 94 cf 00 	call	0x19e	; 0x19e <Motor_Left>
     5ca:	2f ef       	ldi	r18, 0xFF	; 255
     5cc:	89 e6       	ldi	r24, 0x69	; 105
     5ce:	98 e1       	ldi	r25, 0x18	; 24
     5d0:	21 50       	subi	r18, 0x01	; 1
     5d2:	80 40       	sbci	r24, 0x00	; 0
     5d4:	90 40       	sbci	r25, 0x00	; 0
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <moveLeft+0x1a>
     5d8:	00 c0       	rjmp	.+0      	; 0x5da <moveLeft+0x24>
     5da:	00 00       	nop
	_delay_ms(500);
	Motor_Forward();
     5dc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Motor_Forward>
     5e0:	08 95       	ret

000005e2 <moveForward>:
}
void moveForward(void){
	LCD_Clear();
     5e2:	0e 94 88 01 	call	0x310	; 0x310 <LCD_Clear>
	LCD_String_Pos(1, 1, "FORWARD");
     5e6:	4d e8       	ldi	r20, 0x8D	; 141
     5e8:	50 e0       	ldi	r21, 0x00	; 0
     5ea:	61 e0       	ldi	r22, 0x01	; 1
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_String_Pos>
	Motor_Forward();
     5f2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Motor_Forward>
     5f6:	08 95       	ret

000005f8 <moveBackward>:
	
}
void moveBackward(void){
	LCD_Clear();
     5f8:	0e 94 88 01 	call	0x310	; 0x310 <LCD_Clear>
	LCD_String_Pos(1, 1, "BACKWARD");
     5fc:	45 e9       	ldi	r20, 0x95	; 149
     5fe:	50 e0       	ldi	r21, 0x00	; 0
     600:	61 e0       	ldi	r22, 0x01	; 1
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_String_Pos>
	Motor_BackWard();
     608:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <Motor_BackWard>
     60c:	08 95       	ret

0000060e <moveStop>:
}
void moveStop(void){
	LCD_Clear();
     60e:	0e 94 88 01 	call	0x310	; 0x310 <LCD_Clear>
	LCD_String_Pos(1, 1, "STOPPED");
     612:	4e e9       	ldi	r20, 0x9E	; 158
     614:	50 e0       	ldi	r21, 0x00	; 0
     616:	61 e0       	ldi	r22, 0x01	; 1
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_String_Pos>
	Motor_Stop();
     61e:	0e 94 de 00 	call	0x1bc	; 0x1bc <Motor_Stop>
     622:	08 95       	ret

00000624 <main>:
void moveBackward(void);
void moveStop(void);

int main(void)
{
	Motor_Init();
     624:	0e 94 c6 00 	call	0x18c	; 0x18c <Motor_Init>
	LCD_Init();
     628:	0e 94 38 01 	call	0x270	; 0x270 <LCD_Init>
	Servo_Init(straight);
     62c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <straight>
     630:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <straight+0x1>
     634:	0e 94 95 01 	call	0x32a	; 0x32a <Servo_Init>
     638:	2f ef       	ldi	r18, 0xFF	; 255
     63a:	87 ea       	ldi	r24, 0xA7	; 167
     63c:	91 e6       	ldi	r25, 0x61	; 97
     63e:	21 50       	subi	r18, 0x01	; 1
     640:	80 40       	sbci	r24, 0x00	; 0
     642:	90 40       	sbci	r25, 0x00	; 0
     644:	e1 f7       	brne	.-8      	; 0x63e <main+0x1a>
     646:	00 c0       	rjmp	.+0      	; 0x648 <main+0x24>
     648:	00 00       	nop
	_delay_ms(2000);
	dist = readPing();
     64a:	0e 94 28 02 	call	0x450	; 0x450 <readPing>
     64e:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
     652:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     656:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     65a:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     65e:	2f ef       	ldi	r18, 0xFF	; 255
     660:	81 ee       	ldi	r24, 0xE1	; 225
     662:	94 e0       	ldi	r25, 0x04	; 4
     664:	21 50       	subi	r18, 0x01	; 1
     666:	80 40       	sbci	r24, 0x00	; 0
     668:	90 40       	sbci	r25, 0x00	; 0
     66a:	e1 f7       	brne	.-8      	; 0x664 <main+0x40>
     66c:	00 c0       	rjmp	.+0      	; 0x66e <main+0x4a>
     66e:	00 00       	nop
	_delay_ms(100);
	dist = readPing();
     670:	0e 94 28 02 	call	0x450	; 0x450 <readPing>
     674:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
     678:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     67c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     680:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     684:	2f ef       	ldi	r18, 0xFF	; 255
     686:	81 ee       	ldi	r24, 0xE1	; 225
     688:	94 e0       	ldi	r25, 0x04	; 4
     68a:	21 50       	subi	r18, 0x01	; 1
     68c:	80 40       	sbci	r24, 0x00	; 0
     68e:	90 40       	sbci	r25, 0x00	; 0
     690:	e1 f7       	brne	.-8      	; 0x68a <main+0x66>
     692:	00 c0       	rjmp	.+0      	; 0x694 <main+0x70>
     694:	00 00       	nop
	_delay_ms(100);
	dist = readPing();
     696:	0e 94 28 02 	call	0x450	; 0x450 <readPing>
     69a:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
     69e:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6a2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     6a6:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     6aa:	2f ef       	ldi	r18, 0xFF	; 255
     6ac:	81 ee       	ldi	r24, 0xE1	; 225
     6ae:	94 e0       	ldi	r25, 0x04	; 4
     6b0:	21 50       	subi	r18, 0x01	; 1
     6b2:	80 40       	sbci	r24, 0x00	; 0
     6b4:	90 40       	sbci	r25, 0x00	; 0
     6b6:	e1 f7       	brne	.-8      	; 0x6b0 <main+0x8c>
     6b8:	00 c0       	rjmp	.+0      	; 0x6ba <main+0x96>
     6ba:	00 00       	nop
	_delay_ms(100);
	dist = readPing();
     6bc:	0e 94 28 02 	call	0x450	; 0x450 <readPing>
     6c0:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
     6c4:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6c8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     6cc:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     6d0:	2f ef       	ldi	r18, 0xFF	; 255
     6d2:	81 ee       	ldi	r24, 0xE1	; 225
     6d4:	94 e0       	ldi	r25, 0x04	; 4
     6d6:	21 50       	subi	r18, 0x01	; 1
     6d8:	80 40       	sbci	r24, 0x00	; 0
     6da:	90 40       	sbci	r25, 0x00	; 0
     6dc:	e1 f7       	brne	.-8      	; 0x6d6 <main+0xb2>
     6de:	00 c0       	rjmp	.+0      	; 0x6e0 <main+0xbc>
     6e0:	00 00       	nop
	_delay_ms(100);
	
	while(1)
	{
		distanceleft = 0;
     6e2:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <distanceleft>
     6e6:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <distanceleft+0x1>
     6ea:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <distanceleft+0x2>
     6ee:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <distanceleft+0x3>
		distanceright = 0;
     6f2:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <distanceright>
     6f6:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <distanceright+0x1>
     6fa:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <distanceright+0x2>
     6fe:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <distanceright+0x3>
     702:	2f ef       	ldi	r18, 0xFF	; 255
     704:	80 e7       	ldi	r24, 0x70	; 112
     706:	92 e0       	ldi	r25, 0x02	; 2
     708:	21 50       	subi	r18, 0x01	; 1
     70a:	80 40       	sbci	r24, 0x00	; 0
     70c:	90 40       	sbci	r25, 0x00	; 0
     70e:	e1 f7       	brne	.-8      	; 0x708 <main+0xe4>
     710:	00 c0       	rjmp	.+0      	; 0x712 <main+0xee>
     712:	00 00       	nop
		_delay_ms(50);
		if(dist <=35)
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	4c e0       	ldi	r20, 0x0C	; 12
     71a:	52 e4       	ldi	r21, 0x42	; 66
     71c:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     720:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     724:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     728:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     72c:	0e 94 0d 04 	call	0x81a	; 0x81a <__cmpsf2>
     730:	18 16       	cp	r1, r24
     732:	0c f4       	brge	.+2      	; 0x736 <main+0x112>
     734:	65 c0       	rjmp	.+202    	; 0x800 <main+0x1dc>
		{
			moveStop();
     736:	0e 94 07 03 	call	0x60e	; 0x60e <moveStop>
     73a:	2f ef       	ldi	r18, 0xFF	; 255
     73c:	85 ea       	ldi	r24, 0xA5	; 165
     73e:	9e e0       	ldi	r25, 0x0E	; 14
     740:	21 50       	subi	r18, 0x01	; 1
     742:	80 40       	sbci	r24, 0x00	; 0
     744:	90 40       	sbci	r25, 0x00	; 0
     746:	e1 f7       	brne	.-8      	; 0x740 <main+0x11c>
     748:	00 c0       	rjmp	.+0      	; 0x74a <main+0x126>
     74a:	00 00       	nop
			_delay_ms(300);
			moveBackward();
     74c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <moveBackward>
     750:	2f ef       	ldi	r18, 0xFF	; 255
     752:	87 e8       	ldi	r24, 0x87	; 135
     754:	93 e1       	ldi	r25, 0x13	; 19
     756:	21 50       	subi	r18, 0x01	; 1
     758:	80 40       	sbci	r24, 0x00	; 0
     75a:	90 40       	sbci	r25, 0x00	; 0
     75c:	e1 f7       	brne	.-8      	; 0x756 <main+0x132>
     75e:	00 c0       	rjmp	.+0      	; 0x760 <main+0x13c>
     760:	00 00       	nop
			_delay_ms(400);
			moveStop();
     762:	0e 94 07 03 	call	0x60e	; 0x60e <moveStop>
     766:	2f ef       	ldi	r18, 0xFF	; 255
     768:	85 ea       	ldi	r24, 0xA5	; 165
     76a:	9e e0       	ldi	r25, 0x0E	; 14
     76c:	21 50       	subi	r18, 0x01	; 1
     76e:	80 40       	sbci	r24, 0x00	; 0
     770:	90 40       	sbci	r25, 0x00	; 0
     772:	e1 f7       	brne	.-8      	; 0x76c <main+0x148>
     774:	00 c0       	rjmp	.+0      	; 0x776 <main+0x152>
     776:	00 00       	nop
			_delay_ms(300);
			distanceright = lookright();
     778:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lookright>
     77c:	60 93 be 00 	sts	0x00BE, r22	; 0x8000be <distanceright>
     780:	70 93 bf 00 	sts	0x00BF, r23	; 0x8000bf <distanceright+0x1>
     784:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <distanceright+0x2>
     788:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <distanceright+0x3>
     78c:	2f ef       	ldi	r18, 0xFF	; 255
     78e:	85 ea       	ldi	r24, 0xA5	; 165
     790:	9e e0       	ldi	r25, 0x0E	; 14
     792:	21 50       	subi	r18, 0x01	; 1
     794:	80 40       	sbci	r24, 0x00	; 0
     796:	90 40       	sbci	r25, 0x00	; 0
     798:	e1 f7       	brne	.-8      	; 0x792 <main+0x16e>
     79a:	00 c0       	rjmp	.+0      	; 0x79c <main+0x178>
     79c:	00 00       	nop
			_delay_ms(300);
			distanceleft = lookleft();
     79e:	0e 94 90 02 	call	0x520	; 0x520 <lookleft>
     7a2:	60 93 ba 00 	sts	0x00BA, r22	; 0x8000ba <distanceleft>
     7a6:	70 93 bb 00 	sts	0x00BB, r23	; 0x8000bb <distanceleft+0x1>
     7aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <distanceleft+0x2>
     7ae:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <distanceleft+0x3>
     7b2:	2f ef       	ldi	r18, 0xFF	; 255
     7b4:	85 ea       	ldi	r24, 0xA5	; 165
     7b6:	9e e0       	ldi	r25, 0x0E	; 14
     7b8:	21 50       	subi	r18, 0x01	; 1
     7ba:	80 40       	sbci	r24, 0x00	; 0
     7bc:	90 40       	sbci	r25, 0x00	; 0
     7be:	e1 f7       	brne	.-8      	; 0x7b8 <main+0x194>
     7c0:	00 c0       	rjmp	.+0      	; 0x7c2 <main+0x19e>
     7c2:	00 00       	nop
			_delay_ms(300);
			if(distanceright >= distanceleft)
     7c4:	20 91 ba 00 	lds	r18, 0x00BA	; 0x8000ba <distanceleft>
     7c8:	30 91 bb 00 	lds	r19, 0x00BB	; 0x8000bb <distanceleft+0x1>
     7cc:	40 91 bc 00 	lds	r20, 0x00BC	; 0x8000bc <distanceleft+0x2>
     7d0:	50 91 bd 00 	lds	r21, 0x00BD	; 0x8000bd <distanceleft+0x3>
     7d4:	60 91 be 00 	lds	r22, 0x00BE	; 0x8000be <distanceright>
     7d8:	70 91 bf 00 	lds	r23, 0x00BF	; 0x8000bf <distanceright+0x1>
     7dc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <distanceright+0x2>
     7e0:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <distanceright+0x3>
     7e4:	0e 94 6c 05 	call	0xad8	; 0xad8 <__gesf2>
     7e8:	88 23       	and	r24, r24
     7ea:	2c f0       	brlt	.+10     	; 0x7f6 <main+0x1d2>
			{
				moveRight();
     7ec:	0e 94 c5 02 	call	0x58a	; 0x58a <moveRight>
				moveStop();
     7f0:	0e 94 07 03 	call	0x60e	; 0x60e <moveStop>
     7f4:	07 c0       	rjmp	.+14     	; 0x804 <main+0x1e0>
			}
			else
			{
				moveLeft();
     7f6:	0e 94 db 02 	call	0x5b6	; 0x5b6 <moveLeft>
				moveStop();
     7fa:	0e 94 07 03 	call	0x60e	; 0x60e <moveStop>
     7fe:	02 c0       	rjmp	.+4      	; 0x804 <main+0x1e0>
			}
		} 
		else
		{
			moveForward();
     800:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <moveForward>
		}
		dist = readPing();
     804:	0e 94 28 02 	call	0x450	; 0x450 <readPing>
     808:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
     80c:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     810:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     814:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
	} 
     818:	64 cf       	rjmp	.-312    	; 0x6e2 <main+0xbe>

0000081a <__cmpsf2>:
     81a:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__fp_cmp>
     81e:	08 f4       	brcc	.+2      	; 0x822 <__cmpsf2+0x8>
     820:	81 e0       	ldi	r24, 0x01	; 1
     822:	08 95       	ret

00000824 <__divsf3>:
     824:	0e 94 26 04 	call	0x84c	; 0x84c <__divsf3x>
     828:	0c 94 32 05 	jmp	0xa64	; 0xa64 <__fp_round>
     82c:	0e 94 2b 05 	call	0xa56	; 0xa56 <__fp_pscB>
     830:	58 f0       	brcs	.+22     	; 0x848 <__divsf3+0x24>
     832:	0e 94 24 05 	call	0xa48	; 0xa48 <__fp_pscA>
     836:	40 f0       	brcs	.+16     	; 0x848 <__divsf3+0x24>
     838:	29 f4       	brne	.+10     	; 0x844 <__divsf3+0x20>
     83a:	5f 3f       	cpi	r21, 0xFF	; 255
     83c:	29 f0       	breq	.+10     	; 0x848 <__divsf3+0x24>
     83e:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_inf>
     842:	51 11       	cpse	r21, r1
     844:	0c 94 66 05 	jmp	0xacc	; 0xacc <__fp_szero>
     848:	0c 94 21 05 	jmp	0xa42	; 0xa42 <__fp_nan>

0000084c <__divsf3x>:
     84c:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_split3>
     850:	68 f3       	brcs	.-38     	; 0x82c <__divsf3+0x8>

00000852 <__divsf3_pse>:
     852:	99 23       	and	r25, r25
     854:	b1 f3       	breq	.-20     	; 0x842 <__divsf3+0x1e>
     856:	55 23       	and	r21, r21
     858:	91 f3       	breq	.-28     	; 0x83e <__divsf3+0x1a>
     85a:	95 1b       	sub	r25, r21
     85c:	55 0b       	sbc	r21, r21
     85e:	bb 27       	eor	r27, r27
     860:	aa 27       	eor	r26, r26
     862:	62 17       	cp	r22, r18
     864:	73 07       	cpc	r23, r19
     866:	84 07       	cpc	r24, r20
     868:	38 f0       	brcs	.+14     	; 0x878 <__stack+0x19>
     86a:	9f 5f       	subi	r25, 0xFF	; 255
     86c:	5f 4f       	sbci	r21, 0xFF	; 255
     86e:	22 0f       	add	r18, r18
     870:	33 1f       	adc	r19, r19
     872:	44 1f       	adc	r20, r20
     874:	aa 1f       	adc	r26, r26
     876:	a9 f3       	breq	.-22     	; 0x862 <__stack+0x3>
     878:	35 d0       	rcall	.+106    	; 0x8e4 <__stack+0x85>
     87a:	0e 2e       	mov	r0, r30
     87c:	3a f0       	brmi	.+14     	; 0x88c <__stack+0x2d>
     87e:	e0 e8       	ldi	r30, 0x80	; 128
     880:	32 d0       	rcall	.+100    	; 0x8e6 <__stack+0x87>
     882:	91 50       	subi	r25, 0x01	; 1
     884:	50 40       	sbci	r21, 0x00	; 0
     886:	e6 95       	lsr	r30
     888:	00 1c       	adc	r0, r0
     88a:	ca f7       	brpl	.-14     	; 0x87e <__stack+0x1f>
     88c:	2b d0       	rcall	.+86     	; 0x8e4 <__stack+0x85>
     88e:	fe 2f       	mov	r31, r30
     890:	29 d0       	rcall	.+82     	; 0x8e4 <__stack+0x85>
     892:	66 0f       	add	r22, r22
     894:	77 1f       	adc	r23, r23
     896:	88 1f       	adc	r24, r24
     898:	bb 1f       	adc	r27, r27
     89a:	26 17       	cp	r18, r22
     89c:	37 07       	cpc	r19, r23
     89e:	48 07       	cpc	r20, r24
     8a0:	ab 07       	cpc	r26, r27
     8a2:	b0 e8       	ldi	r27, 0x80	; 128
     8a4:	09 f0       	breq	.+2      	; 0x8a8 <__stack+0x49>
     8a6:	bb 0b       	sbc	r27, r27
     8a8:	80 2d       	mov	r24, r0
     8aa:	bf 01       	movw	r22, r30
     8ac:	ff 27       	eor	r31, r31
     8ae:	93 58       	subi	r25, 0x83	; 131
     8b0:	5f 4f       	sbci	r21, 0xFF	; 255
     8b2:	3a f0       	brmi	.+14     	; 0x8c2 <__stack+0x63>
     8b4:	9e 3f       	cpi	r25, 0xFE	; 254
     8b6:	51 05       	cpc	r21, r1
     8b8:	78 f0       	brcs	.+30     	; 0x8d8 <__stack+0x79>
     8ba:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_inf>
     8be:	0c 94 66 05 	jmp	0xacc	; 0xacc <__fp_szero>
     8c2:	5f 3f       	cpi	r21, 0xFF	; 255
     8c4:	e4 f3       	brlt	.-8      	; 0x8be <__stack+0x5f>
     8c6:	98 3e       	cpi	r25, 0xE8	; 232
     8c8:	d4 f3       	brlt	.-12     	; 0x8be <__stack+0x5f>
     8ca:	86 95       	lsr	r24
     8cc:	77 95       	ror	r23
     8ce:	67 95       	ror	r22
     8d0:	b7 95       	ror	r27
     8d2:	f7 95       	ror	r31
     8d4:	9f 5f       	subi	r25, 0xFF	; 255
     8d6:	c9 f7       	brne	.-14     	; 0x8ca <__stack+0x6b>
     8d8:	88 0f       	add	r24, r24
     8da:	91 1d       	adc	r25, r1
     8dc:	96 95       	lsr	r25
     8de:	87 95       	ror	r24
     8e0:	97 f9       	bld	r25, 7
     8e2:	08 95       	ret
     8e4:	e1 e0       	ldi	r30, 0x01	; 1
     8e6:	66 0f       	add	r22, r22
     8e8:	77 1f       	adc	r23, r23
     8ea:	88 1f       	adc	r24, r24
     8ec:	bb 1f       	adc	r27, r27
     8ee:	62 17       	cp	r22, r18
     8f0:	73 07       	cpc	r23, r19
     8f2:	84 07       	cpc	r24, r20
     8f4:	ba 07       	cpc	r27, r26
     8f6:	20 f0       	brcs	.+8      	; 0x900 <__stack+0xa1>
     8f8:	62 1b       	sub	r22, r18
     8fa:	73 0b       	sbc	r23, r19
     8fc:	84 0b       	sbc	r24, r20
     8fe:	ba 0b       	sbc	r27, r26
     900:	ee 1f       	adc	r30, r30
     902:	88 f7       	brcc	.-30     	; 0x8e6 <__stack+0x87>
     904:	e0 95       	com	r30
     906:	08 95       	ret

00000908 <__fixsfsi>:
     908:	0e 94 8b 04 	call	0x916	; 0x916 <__fixunssfsi>
     90c:	68 94       	set
     90e:	b1 11       	cpse	r27, r1
     910:	0c 94 66 05 	jmp	0xacc	; 0xacc <__fp_szero>
     914:	08 95       	ret

00000916 <__fixunssfsi>:
     916:	0e 94 4b 05 	call	0xa96	; 0xa96 <__fp_splitA>
     91a:	88 f0       	brcs	.+34     	; 0x93e <__fixunssfsi+0x28>
     91c:	9f 57       	subi	r25, 0x7F	; 127
     91e:	98 f0       	brcs	.+38     	; 0x946 <__fixunssfsi+0x30>
     920:	b9 2f       	mov	r27, r25
     922:	99 27       	eor	r25, r25
     924:	b7 51       	subi	r27, 0x17	; 23
     926:	b0 f0       	brcs	.+44     	; 0x954 <__fixunssfsi+0x3e>
     928:	e1 f0       	breq	.+56     	; 0x962 <__fixunssfsi+0x4c>
     92a:	66 0f       	add	r22, r22
     92c:	77 1f       	adc	r23, r23
     92e:	88 1f       	adc	r24, r24
     930:	99 1f       	adc	r25, r25
     932:	1a f0       	brmi	.+6      	; 0x93a <__fixunssfsi+0x24>
     934:	ba 95       	dec	r27
     936:	c9 f7       	brne	.-14     	; 0x92a <__fixunssfsi+0x14>
     938:	14 c0       	rjmp	.+40     	; 0x962 <__fixunssfsi+0x4c>
     93a:	b1 30       	cpi	r27, 0x01	; 1
     93c:	91 f0       	breq	.+36     	; 0x962 <__fixunssfsi+0x4c>
     93e:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_zero>
     942:	b1 e0       	ldi	r27, 0x01	; 1
     944:	08 95       	ret
     946:	0c 94 65 05 	jmp	0xaca	; 0xaca <__fp_zero>
     94a:	67 2f       	mov	r22, r23
     94c:	78 2f       	mov	r23, r24
     94e:	88 27       	eor	r24, r24
     950:	b8 5f       	subi	r27, 0xF8	; 248
     952:	39 f0       	breq	.+14     	; 0x962 <__fixunssfsi+0x4c>
     954:	b9 3f       	cpi	r27, 0xF9	; 249
     956:	cc f3       	brlt	.-14     	; 0x94a <__fixunssfsi+0x34>
     958:	86 95       	lsr	r24
     95a:	77 95       	ror	r23
     95c:	67 95       	ror	r22
     95e:	b3 95       	inc	r27
     960:	d9 f7       	brne	.-10     	; 0x958 <__fixunssfsi+0x42>
     962:	3e f4       	brtc	.+14     	; 0x972 <__fixunssfsi+0x5c>
     964:	90 95       	com	r25
     966:	80 95       	com	r24
     968:	70 95       	com	r23
     96a:	61 95       	neg	r22
     96c:	7f 4f       	sbci	r23, 0xFF	; 255
     96e:	8f 4f       	sbci	r24, 0xFF	; 255
     970:	9f 4f       	sbci	r25, 0xFF	; 255
     972:	08 95       	ret

00000974 <__floatunsisf>:
     974:	e8 94       	clt
     976:	09 c0       	rjmp	.+18     	; 0x98a <__floatsisf+0x12>

00000978 <__floatsisf>:
     978:	97 fb       	bst	r25, 7
     97a:	3e f4       	brtc	.+14     	; 0x98a <__floatsisf+0x12>
     97c:	90 95       	com	r25
     97e:	80 95       	com	r24
     980:	70 95       	com	r23
     982:	61 95       	neg	r22
     984:	7f 4f       	sbci	r23, 0xFF	; 255
     986:	8f 4f       	sbci	r24, 0xFF	; 255
     988:	9f 4f       	sbci	r25, 0xFF	; 255
     98a:	99 23       	and	r25, r25
     98c:	a9 f0       	breq	.+42     	; 0x9b8 <__floatsisf+0x40>
     98e:	f9 2f       	mov	r31, r25
     990:	96 e9       	ldi	r25, 0x96	; 150
     992:	bb 27       	eor	r27, r27
     994:	93 95       	inc	r25
     996:	f6 95       	lsr	r31
     998:	87 95       	ror	r24
     99a:	77 95       	ror	r23
     99c:	67 95       	ror	r22
     99e:	b7 95       	ror	r27
     9a0:	f1 11       	cpse	r31, r1
     9a2:	f8 cf       	rjmp	.-16     	; 0x994 <__floatsisf+0x1c>
     9a4:	fa f4       	brpl	.+62     	; 0x9e4 <__floatsisf+0x6c>
     9a6:	bb 0f       	add	r27, r27
     9a8:	11 f4       	brne	.+4      	; 0x9ae <__floatsisf+0x36>
     9aa:	60 ff       	sbrs	r22, 0
     9ac:	1b c0       	rjmp	.+54     	; 0x9e4 <__floatsisf+0x6c>
     9ae:	6f 5f       	subi	r22, 0xFF	; 255
     9b0:	7f 4f       	sbci	r23, 0xFF	; 255
     9b2:	8f 4f       	sbci	r24, 0xFF	; 255
     9b4:	9f 4f       	sbci	r25, 0xFF	; 255
     9b6:	16 c0       	rjmp	.+44     	; 0x9e4 <__floatsisf+0x6c>
     9b8:	88 23       	and	r24, r24
     9ba:	11 f0       	breq	.+4      	; 0x9c0 <__floatsisf+0x48>
     9bc:	96 e9       	ldi	r25, 0x96	; 150
     9be:	11 c0       	rjmp	.+34     	; 0x9e2 <__floatsisf+0x6a>
     9c0:	77 23       	and	r23, r23
     9c2:	21 f0       	breq	.+8      	; 0x9cc <__floatsisf+0x54>
     9c4:	9e e8       	ldi	r25, 0x8E	; 142
     9c6:	87 2f       	mov	r24, r23
     9c8:	76 2f       	mov	r23, r22
     9ca:	05 c0       	rjmp	.+10     	; 0x9d6 <__floatsisf+0x5e>
     9cc:	66 23       	and	r22, r22
     9ce:	71 f0       	breq	.+28     	; 0x9ec <__floatsisf+0x74>
     9d0:	96 e8       	ldi	r25, 0x86	; 134
     9d2:	86 2f       	mov	r24, r22
     9d4:	70 e0       	ldi	r23, 0x00	; 0
     9d6:	60 e0       	ldi	r22, 0x00	; 0
     9d8:	2a f0       	brmi	.+10     	; 0x9e4 <__floatsisf+0x6c>
     9da:	9a 95       	dec	r25
     9dc:	66 0f       	add	r22, r22
     9de:	77 1f       	adc	r23, r23
     9e0:	88 1f       	adc	r24, r24
     9e2:	da f7       	brpl	.-10     	; 0x9da <__floatsisf+0x62>
     9e4:	88 0f       	add	r24, r24
     9e6:	96 95       	lsr	r25
     9e8:	87 95       	ror	r24
     9ea:	97 f9       	bld	r25, 7
     9ec:	08 95       	ret

000009ee <__fp_cmp>:
     9ee:	99 0f       	add	r25, r25
     9f0:	00 08       	sbc	r0, r0
     9f2:	55 0f       	add	r21, r21
     9f4:	aa 0b       	sbc	r26, r26
     9f6:	e0 e8       	ldi	r30, 0x80	; 128
     9f8:	fe ef       	ldi	r31, 0xFE	; 254
     9fa:	16 16       	cp	r1, r22
     9fc:	17 06       	cpc	r1, r23
     9fe:	e8 07       	cpc	r30, r24
     a00:	f9 07       	cpc	r31, r25
     a02:	c0 f0       	brcs	.+48     	; 0xa34 <__fp_cmp+0x46>
     a04:	12 16       	cp	r1, r18
     a06:	13 06       	cpc	r1, r19
     a08:	e4 07       	cpc	r30, r20
     a0a:	f5 07       	cpc	r31, r21
     a0c:	98 f0       	brcs	.+38     	; 0xa34 <__fp_cmp+0x46>
     a0e:	62 1b       	sub	r22, r18
     a10:	73 0b       	sbc	r23, r19
     a12:	84 0b       	sbc	r24, r20
     a14:	95 0b       	sbc	r25, r21
     a16:	39 f4       	brne	.+14     	; 0xa26 <__fp_cmp+0x38>
     a18:	0a 26       	eor	r0, r26
     a1a:	61 f0       	breq	.+24     	; 0xa34 <__fp_cmp+0x46>
     a1c:	23 2b       	or	r18, r19
     a1e:	24 2b       	or	r18, r20
     a20:	25 2b       	or	r18, r21
     a22:	21 f4       	brne	.+8      	; 0xa2c <__fp_cmp+0x3e>
     a24:	08 95       	ret
     a26:	0a 26       	eor	r0, r26
     a28:	09 f4       	brne	.+2      	; 0xa2c <__fp_cmp+0x3e>
     a2a:	a1 40       	sbci	r26, 0x01	; 1
     a2c:	a6 95       	lsr	r26
     a2e:	8f ef       	ldi	r24, 0xFF	; 255
     a30:	81 1d       	adc	r24, r1
     a32:	81 1d       	adc	r24, r1
     a34:	08 95       	ret

00000a36 <__fp_inf>:
     a36:	97 f9       	bld	r25, 7
     a38:	9f 67       	ori	r25, 0x7F	; 127
     a3a:	80 e8       	ldi	r24, 0x80	; 128
     a3c:	70 e0       	ldi	r23, 0x00	; 0
     a3e:	60 e0       	ldi	r22, 0x00	; 0
     a40:	08 95       	ret

00000a42 <__fp_nan>:
     a42:	9f ef       	ldi	r25, 0xFF	; 255
     a44:	80 ec       	ldi	r24, 0xC0	; 192
     a46:	08 95       	ret

00000a48 <__fp_pscA>:
     a48:	00 24       	eor	r0, r0
     a4a:	0a 94       	dec	r0
     a4c:	16 16       	cp	r1, r22
     a4e:	17 06       	cpc	r1, r23
     a50:	18 06       	cpc	r1, r24
     a52:	09 06       	cpc	r0, r25
     a54:	08 95       	ret

00000a56 <__fp_pscB>:
     a56:	00 24       	eor	r0, r0
     a58:	0a 94       	dec	r0
     a5a:	12 16       	cp	r1, r18
     a5c:	13 06       	cpc	r1, r19
     a5e:	14 06       	cpc	r1, r20
     a60:	05 06       	cpc	r0, r21
     a62:	08 95       	ret

00000a64 <__fp_round>:
     a64:	09 2e       	mov	r0, r25
     a66:	03 94       	inc	r0
     a68:	00 0c       	add	r0, r0
     a6a:	11 f4       	brne	.+4      	; 0xa70 <__fp_round+0xc>
     a6c:	88 23       	and	r24, r24
     a6e:	52 f0       	brmi	.+20     	; 0xa84 <__fp_round+0x20>
     a70:	bb 0f       	add	r27, r27
     a72:	40 f4       	brcc	.+16     	; 0xa84 <__fp_round+0x20>
     a74:	bf 2b       	or	r27, r31
     a76:	11 f4       	brne	.+4      	; 0xa7c <__fp_round+0x18>
     a78:	60 ff       	sbrs	r22, 0
     a7a:	04 c0       	rjmp	.+8      	; 0xa84 <__fp_round+0x20>
     a7c:	6f 5f       	subi	r22, 0xFF	; 255
     a7e:	7f 4f       	sbci	r23, 0xFF	; 255
     a80:	8f 4f       	sbci	r24, 0xFF	; 255
     a82:	9f 4f       	sbci	r25, 0xFF	; 255
     a84:	08 95       	ret

00000a86 <__fp_split3>:
     a86:	57 fd       	sbrc	r21, 7
     a88:	90 58       	subi	r25, 0x80	; 128
     a8a:	44 0f       	add	r20, r20
     a8c:	55 1f       	adc	r21, r21
     a8e:	59 f0       	breq	.+22     	; 0xaa6 <__fp_splitA+0x10>
     a90:	5f 3f       	cpi	r21, 0xFF	; 255
     a92:	71 f0       	breq	.+28     	; 0xab0 <__fp_splitA+0x1a>
     a94:	47 95       	ror	r20

00000a96 <__fp_splitA>:
     a96:	88 0f       	add	r24, r24
     a98:	97 fb       	bst	r25, 7
     a9a:	99 1f       	adc	r25, r25
     a9c:	61 f0       	breq	.+24     	; 0xab6 <__fp_splitA+0x20>
     a9e:	9f 3f       	cpi	r25, 0xFF	; 255
     aa0:	79 f0       	breq	.+30     	; 0xac0 <__fp_splitA+0x2a>
     aa2:	87 95       	ror	r24
     aa4:	08 95       	ret
     aa6:	12 16       	cp	r1, r18
     aa8:	13 06       	cpc	r1, r19
     aaa:	14 06       	cpc	r1, r20
     aac:	55 1f       	adc	r21, r21
     aae:	f2 cf       	rjmp	.-28     	; 0xa94 <__fp_split3+0xe>
     ab0:	46 95       	lsr	r20
     ab2:	f1 df       	rcall	.-30     	; 0xa96 <__fp_splitA>
     ab4:	08 c0       	rjmp	.+16     	; 0xac6 <__fp_splitA+0x30>
     ab6:	16 16       	cp	r1, r22
     ab8:	17 06       	cpc	r1, r23
     aba:	18 06       	cpc	r1, r24
     abc:	99 1f       	adc	r25, r25
     abe:	f1 cf       	rjmp	.-30     	; 0xaa2 <__fp_splitA+0xc>
     ac0:	86 95       	lsr	r24
     ac2:	71 05       	cpc	r23, r1
     ac4:	61 05       	cpc	r22, r1
     ac6:	08 94       	sec
     ac8:	08 95       	ret

00000aca <__fp_zero>:
     aca:	e8 94       	clt

00000acc <__fp_szero>:
     acc:	bb 27       	eor	r27, r27
     ace:	66 27       	eor	r22, r22
     ad0:	77 27       	eor	r23, r23
     ad2:	cb 01       	movw	r24, r22
     ad4:	97 f9       	bld	r25, 7
     ad6:	08 95       	ret

00000ad8 <__gesf2>:
     ad8:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__fp_cmp>
     adc:	08 f4       	brcc	.+2      	; 0xae0 <__gesf2+0x8>
     ade:	8f ef       	ldi	r24, 0xFF	; 255
     ae0:	08 95       	ret

00000ae2 <__usmulhisi3>:
     ae2:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__umulhisi3>

00000ae6 <__usmulhisi3_tail>:
     ae6:	b7 ff       	sbrs	r27, 7
     ae8:	08 95       	ret
     aea:	82 1b       	sub	r24, r18
     aec:	93 0b       	sbc	r25, r19
     aee:	08 95       	ret

00000af0 <__umulhisi3>:
     af0:	a2 9f       	mul	r26, r18
     af2:	b0 01       	movw	r22, r0
     af4:	b3 9f       	mul	r27, r19
     af6:	c0 01       	movw	r24, r0
     af8:	a3 9f       	mul	r26, r19
     afa:	70 0d       	add	r23, r0
     afc:	81 1d       	adc	r24, r1
     afe:	11 24       	eor	r1, r1
     b00:	91 1d       	adc	r25, r1
     b02:	b2 9f       	mul	r27, r18
     b04:	70 0d       	add	r23, r0
     b06:	81 1d       	adc	r24, r1
     b08:	11 24       	eor	r1, r1
     b0a:	91 1d       	adc	r25, r1
     b0c:	08 95       	ret

00000b0e <dtostrf>:
     b0e:	ef 92       	push	r14
     b10:	0f 93       	push	r16
     b12:	1f 93       	push	r17
     b14:	cf 93       	push	r28
     b16:	df 93       	push	r29
     b18:	e8 01       	movw	r28, r16
     b1a:	47 fd       	sbrc	r20, 7
     b1c:	02 c0       	rjmp	.+4      	; 0xb22 <dtostrf+0x14>
     b1e:	34 e0       	ldi	r19, 0x04	; 4
     b20:	01 c0       	rjmp	.+2      	; 0xb24 <dtostrf+0x16>
     b22:	34 e1       	ldi	r19, 0x14	; 20
     b24:	04 2e       	mov	r0, r20
     b26:	00 0c       	add	r0, r0
     b28:	55 0b       	sbc	r21, r21
     b2a:	57 ff       	sbrs	r21, 7
     b2c:	03 c0       	rjmp	.+6      	; 0xb34 <dtostrf+0x26>
     b2e:	51 95       	neg	r21
     b30:	41 95       	neg	r20
     b32:	51 09       	sbc	r21, r1
     b34:	e3 2e       	mov	r14, r19
     b36:	02 2f       	mov	r16, r18
     b38:	24 2f       	mov	r18, r20
     b3a:	ae 01       	movw	r20, r28
     b3c:	0e 94 a7 05 	call	0xb4e	; 0xb4e <dtoa_prf>
     b40:	ce 01       	movw	r24, r28
     b42:	df 91       	pop	r29
     b44:	cf 91       	pop	r28
     b46:	1f 91       	pop	r17
     b48:	0f 91       	pop	r16
     b4a:	ef 90       	pop	r14
     b4c:	08 95       	ret

00000b4e <dtoa_prf>:
     b4e:	a9 e0       	ldi	r26, 0x09	; 9
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	ed ea       	ldi	r30, 0xAD	; 173
     b54:	f5 e0       	ldi	r31, 0x05	; 5
     b56:	0c 94 df 07 	jmp	0xfbe	; 0xfbe <__prologue_saves__+0xc>
     b5a:	6a 01       	movw	r12, r20
     b5c:	12 2f       	mov	r17, r18
     b5e:	b0 2e       	mov	r11, r16
     b60:	2b e3       	ldi	r18, 0x3B	; 59
     b62:	20 17       	cp	r18, r16
     b64:	20 f0       	brcs	.+8      	; 0xb6e <dtoa_prf+0x20>
     b66:	ff 24       	eor	r15, r15
     b68:	f3 94       	inc	r15
     b6a:	f0 0e       	add	r15, r16
     b6c:	02 c0       	rjmp	.+4      	; 0xb72 <dtoa_prf+0x24>
     b6e:	2c e3       	ldi	r18, 0x3C	; 60
     b70:	f2 2e       	mov	r15, r18
     b72:	0f 2d       	mov	r16, r15
     b74:	27 e0       	ldi	r18, 0x07	; 7
     b76:	ae 01       	movw	r20, r28
     b78:	4f 5f       	subi	r20, 0xFF	; 255
     b7a:	5f 4f       	sbci	r21, 0xFF	; 255
     b7c:	0e 94 01 07 	call	0xe02	; 0xe02 <__ftoa_engine>
     b80:	bc 01       	movw	r22, r24
     b82:	49 81       	ldd	r20, Y+1	; 0x01
     b84:	84 2f       	mov	r24, r20
     b86:	89 70       	andi	r24, 0x09	; 9
     b88:	81 30       	cpi	r24, 0x01	; 1
     b8a:	31 f0       	breq	.+12     	; 0xb98 <dtoa_prf+0x4a>
     b8c:	e1 fc       	sbrc	r14, 1
     b8e:	06 c0       	rjmp	.+12     	; 0xb9c <dtoa_prf+0x4e>
     b90:	e0 fe       	sbrs	r14, 0
     b92:	06 c0       	rjmp	.+12     	; 0xba0 <dtoa_prf+0x52>
     b94:	90 e2       	ldi	r25, 0x20	; 32
     b96:	05 c0       	rjmp	.+10     	; 0xba2 <dtoa_prf+0x54>
     b98:	9d e2       	ldi	r25, 0x2D	; 45
     b9a:	03 c0       	rjmp	.+6      	; 0xba2 <dtoa_prf+0x54>
     b9c:	9b e2       	ldi	r25, 0x2B	; 43
     b9e:	01 c0       	rjmp	.+2      	; 0xba2 <dtoa_prf+0x54>
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	5e 2d       	mov	r21, r14
     ba4:	50 71       	andi	r21, 0x10	; 16
     ba6:	43 ff       	sbrs	r20, 3
     ba8:	3c c0       	rjmp	.+120    	; 0xc22 <dtoa_prf+0xd4>
     baa:	91 11       	cpse	r25, r1
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <dtoa_prf+0x64>
     bae:	83 e0       	ldi	r24, 0x03	; 3
     bb0:	01 c0       	rjmp	.+2      	; 0xbb4 <dtoa_prf+0x66>
     bb2:	84 e0       	ldi	r24, 0x04	; 4
     bb4:	81 17       	cp	r24, r17
     bb6:	18 f4       	brcc	.+6      	; 0xbbe <dtoa_prf+0x70>
     bb8:	21 2f       	mov	r18, r17
     bba:	28 1b       	sub	r18, r24
     bbc:	01 c0       	rjmp	.+2      	; 0xbc0 <dtoa_prf+0x72>
     bbe:	20 e0       	ldi	r18, 0x00	; 0
     bc0:	51 11       	cpse	r21, r1
     bc2:	0b c0       	rjmp	.+22     	; 0xbda <dtoa_prf+0x8c>
     bc4:	f6 01       	movw	r30, r12
     bc6:	82 2f       	mov	r24, r18
     bc8:	30 e2       	ldi	r19, 0x20	; 32
     bca:	88 23       	and	r24, r24
     bcc:	19 f0       	breq	.+6      	; 0xbd4 <dtoa_prf+0x86>
     bce:	31 93       	st	Z+, r19
     bd0:	81 50       	subi	r24, 0x01	; 1
     bd2:	fb cf       	rjmp	.-10     	; 0xbca <dtoa_prf+0x7c>
     bd4:	c2 0e       	add	r12, r18
     bd6:	d1 1c       	adc	r13, r1
     bd8:	20 e0       	ldi	r18, 0x00	; 0
     bda:	99 23       	and	r25, r25
     bdc:	29 f0       	breq	.+10     	; 0xbe8 <dtoa_prf+0x9a>
     bde:	d6 01       	movw	r26, r12
     be0:	9c 93       	st	X, r25
     be2:	f6 01       	movw	r30, r12
     be4:	31 96       	adiw	r30, 0x01	; 1
     be6:	6f 01       	movw	r12, r30
     be8:	c6 01       	movw	r24, r12
     bea:	03 96       	adiw	r24, 0x03	; 3
     bec:	e2 fe       	sbrs	r14, 2
     bee:	0a c0       	rjmp	.+20     	; 0xc04 <dtoa_prf+0xb6>
     bf0:	3e e4       	ldi	r19, 0x4E	; 78
     bf2:	d6 01       	movw	r26, r12
     bf4:	3c 93       	st	X, r19
     bf6:	41 e4       	ldi	r20, 0x41	; 65
     bf8:	11 96       	adiw	r26, 0x01	; 1
     bfa:	4c 93       	st	X, r20
     bfc:	11 97       	sbiw	r26, 0x01	; 1
     bfe:	12 96       	adiw	r26, 0x02	; 2
     c00:	3c 93       	st	X, r19
     c02:	06 c0       	rjmp	.+12     	; 0xc10 <dtoa_prf+0xc2>
     c04:	3e e6       	ldi	r19, 0x6E	; 110
     c06:	f6 01       	movw	r30, r12
     c08:	30 83       	st	Z, r19
     c0a:	41 e6       	ldi	r20, 0x61	; 97
     c0c:	41 83       	std	Z+1, r20	; 0x01
     c0e:	32 83       	std	Z+2, r19	; 0x02
     c10:	fc 01       	movw	r30, r24
     c12:	32 2f       	mov	r19, r18
     c14:	40 e2       	ldi	r20, 0x20	; 32
     c16:	33 23       	and	r19, r19
     c18:	09 f4       	brne	.+2      	; 0xc1c <dtoa_prf+0xce>
     c1a:	42 c0       	rjmp	.+132    	; 0xca0 <dtoa_prf+0x152>
     c1c:	41 93       	st	Z+, r20
     c1e:	31 50       	subi	r19, 0x01	; 1
     c20:	fa cf       	rjmp	.-12     	; 0xc16 <dtoa_prf+0xc8>
     c22:	42 ff       	sbrs	r20, 2
     c24:	44 c0       	rjmp	.+136    	; 0xcae <dtoa_prf+0x160>
     c26:	91 11       	cpse	r25, r1
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <dtoa_prf+0xe0>
     c2a:	83 e0       	ldi	r24, 0x03	; 3
     c2c:	01 c0       	rjmp	.+2      	; 0xc30 <dtoa_prf+0xe2>
     c2e:	84 e0       	ldi	r24, 0x04	; 4
     c30:	81 17       	cp	r24, r17
     c32:	18 f4       	brcc	.+6      	; 0xc3a <dtoa_prf+0xec>
     c34:	21 2f       	mov	r18, r17
     c36:	28 1b       	sub	r18, r24
     c38:	01 c0       	rjmp	.+2      	; 0xc3c <dtoa_prf+0xee>
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	51 11       	cpse	r21, r1
     c3e:	0b c0       	rjmp	.+22     	; 0xc56 <dtoa_prf+0x108>
     c40:	f6 01       	movw	r30, r12
     c42:	82 2f       	mov	r24, r18
     c44:	30 e2       	ldi	r19, 0x20	; 32
     c46:	88 23       	and	r24, r24
     c48:	19 f0       	breq	.+6      	; 0xc50 <dtoa_prf+0x102>
     c4a:	31 93       	st	Z+, r19
     c4c:	81 50       	subi	r24, 0x01	; 1
     c4e:	fb cf       	rjmp	.-10     	; 0xc46 <dtoa_prf+0xf8>
     c50:	c2 0e       	add	r12, r18
     c52:	d1 1c       	adc	r13, r1
     c54:	20 e0       	ldi	r18, 0x00	; 0
     c56:	99 23       	and	r25, r25
     c58:	29 f0       	breq	.+10     	; 0xc64 <dtoa_prf+0x116>
     c5a:	d6 01       	movw	r26, r12
     c5c:	9c 93       	st	X, r25
     c5e:	f6 01       	movw	r30, r12
     c60:	31 96       	adiw	r30, 0x01	; 1
     c62:	6f 01       	movw	r12, r30
     c64:	c6 01       	movw	r24, r12
     c66:	03 96       	adiw	r24, 0x03	; 3
     c68:	e2 fe       	sbrs	r14, 2
     c6a:	0b c0       	rjmp	.+22     	; 0xc82 <dtoa_prf+0x134>
     c6c:	39 e4       	ldi	r19, 0x49	; 73
     c6e:	d6 01       	movw	r26, r12
     c70:	3c 93       	st	X, r19
     c72:	3e e4       	ldi	r19, 0x4E	; 78
     c74:	11 96       	adiw	r26, 0x01	; 1
     c76:	3c 93       	st	X, r19
     c78:	11 97       	sbiw	r26, 0x01	; 1
     c7a:	36 e4       	ldi	r19, 0x46	; 70
     c7c:	12 96       	adiw	r26, 0x02	; 2
     c7e:	3c 93       	st	X, r19
     c80:	07 c0       	rjmp	.+14     	; 0xc90 <dtoa_prf+0x142>
     c82:	39 e6       	ldi	r19, 0x69	; 105
     c84:	f6 01       	movw	r30, r12
     c86:	30 83       	st	Z, r19
     c88:	3e e6       	ldi	r19, 0x6E	; 110
     c8a:	31 83       	std	Z+1, r19	; 0x01
     c8c:	36 e6       	ldi	r19, 0x66	; 102
     c8e:	32 83       	std	Z+2, r19	; 0x02
     c90:	fc 01       	movw	r30, r24
     c92:	32 2f       	mov	r19, r18
     c94:	40 e2       	ldi	r20, 0x20	; 32
     c96:	33 23       	and	r19, r19
     c98:	19 f0       	breq	.+6      	; 0xca0 <dtoa_prf+0x152>
     c9a:	41 93       	st	Z+, r20
     c9c:	31 50       	subi	r19, 0x01	; 1
     c9e:	fb cf       	rjmp	.-10     	; 0xc96 <dtoa_prf+0x148>
     ca0:	fc 01       	movw	r30, r24
     ca2:	e2 0f       	add	r30, r18
     ca4:	f1 1d       	adc	r31, r1
     ca6:	10 82       	st	Z, r1
     ca8:	8e ef       	ldi	r24, 0xFE	; 254
     caa:	9f ef       	ldi	r25, 0xFF	; 255
     cac:	a6 c0       	rjmp	.+332    	; 0xdfa <dtoa_prf+0x2ac>
     cae:	21 e0       	ldi	r18, 0x01	; 1
     cb0:	30 e0       	ldi	r19, 0x00	; 0
     cb2:	91 11       	cpse	r25, r1
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <dtoa_prf+0x16c>
     cb6:	20 e0       	ldi	r18, 0x00	; 0
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	16 16       	cp	r1, r22
     cbc:	17 06       	cpc	r1, r23
     cbe:	1c f4       	brge	.+6      	; 0xcc6 <dtoa_prf+0x178>
     cc0:	fb 01       	movw	r30, r22
     cc2:	31 96       	adiw	r30, 0x01	; 1
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <dtoa_prf+0x17c>
     cc6:	e1 e0       	ldi	r30, 0x01	; 1
     cc8:	f0 e0       	ldi	r31, 0x00	; 0
     cca:	2e 0f       	add	r18, r30
     ccc:	3f 1f       	adc	r19, r31
     cce:	bb 20       	and	r11, r11
     cd0:	21 f0       	breq	.+8      	; 0xcda <dtoa_prf+0x18c>
     cd2:	eb 2d       	mov	r30, r11
     cd4:	f0 e0       	ldi	r31, 0x00	; 0
     cd6:	31 96       	adiw	r30, 0x01	; 1
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <dtoa_prf+0x190>
     cda:	e0 e0       	ldi	r30, 0x00	; 0
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	2e 0f       	add	r18, r30
     ce0:	3f 1f       	adc	r19, r31
     ce2:	e1 2f       	mov	r30, r17
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	2e 17       	cp	r18, r30
     ce8:	3f 07       	cpc	r19, r31
     cea:	1c f4       	brge	.+6      	; 0xcf2 <dtoa_prf+0x1a4>
     cec:	12 1b       	sub	r17, r18
     cee:	21 2f       	mov	r18, r17
     cf0:	01 c0       	rjmp	.+2      	; 0xcf4 <dtoa_prf+0x1a6>
     cf2:	20 e0       	ldi	r18, 0x00	; 0
     cf4:	8e 2d       	mov	r24, r14
     cf6:	88 71       	andi	r24, 0x18	; 24
     cf8:	59 f4       	brne	.+22     	; 0xd10 <dtoa_prf+0x1c2>
     cfa:	f6 01       	movw	r30, r12
     cfc:	82 2f       	mov	r24, r18
     cfe:	30 e2       	ldi	r19, 0x20	; 32
     d00:	88 23       	and	r24, r24
     d02:	19 f0       	breq	.+6      	; 0xd0a <dtoa_prf+0x1bc>
     d04:	31 93       	st	Z+, r19
     d06:	81 50       	subi	r24, 0x01	; 1
     d08:	fb cf       	rjmp	.-10     	; 0xd00 <dtoa_prf+0x1b2>
     d0a:	c2 0e       	add	r12, r18
     d0c:	d1 1c       	adc	r13, r1
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	99 23       	and	r25, r25
     d12:	29 f0       	breq	.+10     	; 0xd1e <dtoa_prf+0x1d0>
     d14:	d6 01       	movw	r26, r12
     d16:	9c 93       	st	X, r25
     d18:	f6 01       	movw	r30, r12
     d1a:	31 96       	adiw	r30, 0x01	; 1
     d1c:	6f 01       	movw	r12, r30
     d1e:	51 11       	cpse	r21, r1
     d20:	0b c0       	rjmp	.+22     	; 0xd38 <dtoa_prf+0x1ea>
     d22:	f6 01       	movw	r30, r12
     d24:	82 2f       	mov	r24, r18
     d26:	90 e3       	ldi	r25, 0x30	; 48
     d28:	88 23       	and	r24, r24
     d2a:	19 f0       	breq	.+6      	; 0xd32 <dtoa_prf+0x1e4>
     d2c:	91 93       	st	Z+, r25
     d2e:	81 50       	subi	r24, 0x01	; 1
     d30:	fb cf       	rjmp	.-10     	; 0xd28 <dtoa_prf+0x1da>
     d32:	c2 0e       	add	r12, r18
     d34:	d1 1c       	adc	r13, r1
     d36:	20 e0       	ldi	r18, 0x00	; 0
     d38:	0f 2d       	mov	r16, r15
     d3a:	06 0f       	add	r16, r22
     d3c:	9a 81       	ldd	r25, Y+2	; 0x02
     d3e:	34 2f       	mov	r19, r20
     d40:	30 71       	andi	r19, 0x10	; 16
     d42:	44 ff       	sbrs	r20, 4
     d44:	03 c0       	rjmp	.+6      	; 0xd4c <dtoa_prf+0x1fe>
     d46:	91 33       	cpi	r25, 0x31	; 49
     d48:	09 f4       	brne	.+2      	; 0xd4c <dtoa_prf+0x1fe>
     d4a:	01 50       	subi	r16, 0x01	; 1
     d4c:	10 16       	cp	r1, r16
     d4e:	24 f4       	brge	.+8      	; 0xd58 <dtoa_prf+0x20a>
     d50:	09 30       	cpi	r16, 0x09	; 9
     d52:	18 f0       	brcs	.+6      	; 0xd5a <dtoa_prf+0x20c>
     d54:	08 e0       	ldi	r16, 0x08	; 8
     d56:	01 c0       	rjmp	.+2      	; 0xd5a <dtoa_prf+0x20c>
     d58:	01 e0       	ldi	r16, 0x01	; 1
     d5a:	ab 01       	movw	r20, r22
     d5c:	77 ff       	sbrs	r23, 7
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <dtoa_prf+0x216>
     d60:	40 e0       	ldi	r20, 0x00	; 0
     d62:	50 e0       	ldi	r21, 0x00	; 0
     d64:	fb 01       	movw	r30, r22
     d66:	e4 1b       	sub	r30, r20
     d68:	f5 0b       	sbc	r31, r21
     d6a:	a1 e0       	ldi	r26, 0x01	; 1
     d6c:	b0 e0       	ldi	r27, 0x00	; 0
     d6e:	ac 0f       	add	r26, r28
     d70:	bd 1f       	adc	r27, r29
     d72:	ea 0f       	add	r30, r26
     d74:	fb 1f       	adc	r31, r27
     d76:	8e e2       	ldi	r24, 0x2E	; 46
     d78:	a8 2e       	mov	r10, r24
     d7a:	4b 01       	movw	r8, r22
     d7c:	80 1a       	sub	r8, r16
     d7e:	91 08       	sbc	r9, r1
     d80:	0b 2d       	mov	r16, r11
     d82:	10 e0       	ldi	r17, 0x00	; 0
     d84:	11 95       	neg	r17
     d86:	01 95       	neg	r16
     d88:	11 09       	sbc	r17, r1
     d8a:	4f 3f       	cpi	r20, 0xFF	; 255
     d8c:	bf ef       	ldi	r27, 0xFF	; 255
     d8e:	5b 07       	cpc	r21, r27
     d90:	21 f4       	brne	.+8      	; 0xd9a <dtoa_prf+0x24c>
     d92:	d6 01       	movw	r26, r12
     d94:	ac 92       	st	X, r10
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	6d 01       	movw	r12, r26
     d9a:	64 17       	cp	r22, r20
     d9c:	75 07       	cpc	r23, r21
     d9e:	2c f0       	brlt	.+10     	; 0xdaa <dtoa_prf+0x25c>
     da0:	84 16       	cp	r8, r20
     da2:	95 06       	cpc	r9, r21
     da4:	14 f4       	brge	.+4      	; 0xdaa <dtoa_prf+0x25c>
     da6:	81 81       	ldd	r24, Z+1	; 0x01
     da8:	01 c0       	rjmp	.+2      	; 0xdac <dtoa_prf+0x25e>
     daa:	80 e3       	ldi	r24, 0x30	; 48
     dac:	41 50       	subi	r20, 0x01	; 1
     dae:	51 09       	sbc	r21, r1
     db0:	31 96       	adiw	r30, 0x01	; 1
     db2:	d6 01       	movw	r26, r12
     db4:	11 96       	adiw	r26, 0x01	; 1
     db6:	7d 01       	movw	r14, r26
     db8:	40 17       	cp	r20, r16
     dba:	51 07       	cpc	r21, r17
     dbc:	24 f0       	brlt	.+8      	; 0xdc6 <dtoa_prf+0x278>
     dbe:	d6 01       	movw	r26, r12
     dc0:	8c 93       	st	X, r24
     dc2:	67 01       	movw	r12, r14
     dc4:	e2 cf       	rjmp	.-60     	; 0xd8a <dtoa_prf+0x23c>
     dc6:	64 17       	cp	r22, r20
     dc8:	75 07       	cpc	r23, r21
     dca:	39 f4       	brne	.+14     	; 0xdda <dtoa_prf+0x28c>
     dcc:	96 33       	cpi	r25, 0x36	; 54
     dce:	20 f4       	brcc	.+8      	; 0xdd8 <dtoa_prf+0x28a>
     dd0:	95 33       	cpi	r25, 0x35	; 53
     dd2:	19 f4       	brne	.+6      	; 0xdda <dtoa_prf+0x28c>
     dd4:	31 11       	cpse	r19, r1
     dd6:	01 c0       	rjmp	.+2      	; 0xdda <dtoa_prf+0x28c>
     dd8:	81 e3       	ldi	r24, 0x31	; 49
     dda:	f6 01       	movw	r30, r12
     ddc:	80 83       	st	Z, r24
     dde:	f7 01       	movw	r30, r14
     de0:	82 2f       	mov	r24, r18
     de2:	90 e2       	ldi	r25, 0x20	; 32
     de4:	88 23       	and	r24, r24
     de6:	19 f0       	breq	.+6      	; 0xdee <dtoa_prf+0x2a0>
     de8:	91 93       	st	Z+, r25
     dea:	81 50       	subi	r24, 0x01	; 1
     dec:	fb cf       	rjmp	.-10     	; 0xde4 <dtoa_prf+0x296>
     dee:	f7 01       	movw	r30, r14
     df0:	e2 0f       	add	r30, r18
     df2:	f1 1d       	adc	r31, r1
     df4:	10 82       	st	Z, r1
     df6:	80 e0       	ldi	r24, 0x00	; 0
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	29 96       	adiw	r28, 0x09	; 9
     dfc:	ec e0       	ldi	r30, 0x0C	; 12
     dfe:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__epilogue_restores__+0xc>

00000e02 <__ftoa_engine>:
     e02:	28 30       	cpi	r18, 0x08	; 8
     e04:	08 f0       	brcs	.+2      	; 0xe08 <__ftoa_engine+0x6>
     e06:	27 e0       	ldi	r18, 0x07	; 7
     e08:	33 27       	eor	r19, r19
     e0a:	da 01       	movw	r26, r20
     e0c:	99 0f       	add	r25, r25
     e0e:	31 1d       	adc	r19, r1
     e10:	87 fd       	sbrc	r24, 7
     e12:	91 60       	ori	r25, 0x01	; 1
     e14:	00 96       	adiw	r24, 0x00	; 0
     e16:	61 05       	cpc	r22, r1
     e18:	71 05       	cpc	r23, r1
     e1a:	39 f4       	brne	.+14     	; 0xe2a <__ftoa_engine+0x28>
     e1c:	32 60       	ori	r19, 0x02	; 2
     e1e:	2e 5f       	subi	r18, 0xFE	; 254
     e20:	3d 93       	st	X+, r19
     e22:	30 e3       	ldi	r19, 0x30	; 48
     e24:	2a 95       	dec	r18
     e26:	e1 f7       	brne	.-8      	; 0xe20 <__ftoa_engine+0x1e>
     e28:	08 95       	ret
     e2a:	9f 3f       	cpi	r25, 0xFF	; 255
     e2c:	30 f0       	brcs	.+12     	; 0xe3a <__ftoa_engine+0x38>
     e2e:	80 38       	cpi	r24, 0x80	; 128
     e30:	71 05       	cpc	r23, r1
     e32:	61 05       	cpc	r22, r1
     e34:	09 f0       	breq	.+2      	; 0xe38 <__ftoa_engine+0x36>
     e36:	3c 5f       	subi	r19, 0xFC	; 252
     e38:	3c 5f       	subi	r19, 0xFC	; 252
     e3a:	3d 93       	st	X+, r19
     e3c:	91 30       	cpi	r25, 0x01	; 1
     e3e:	08 f0       	brcs	.+2      	; 0xe42 <__ftoa_engine+0x40>
     e40:	80 68       	ori	r24, 0x80	; 128
     e42:	91 1d       	adc	r25, r1
     e44:	df 93       	push	r29
     e46:	cf 93       	push	r28
     e48:	1f 93       	push	r17
     e4a:	0f 93       	push	r16
     e4c:	ff 92       	push	r15
     e4e:	ef 92       	push	r14
     e50:	19 2f       	mov	r17, r25
     e52:	98 7f       	andi	r25, 0xF8	; 248
     e54:	96 95       	lsr	r25
     e56:	e9 2f       	mov	r30, r25
     e58:	96 95       	lsr	r25
     e5a:	96 95       	lsr	r25
     e5c:	e9 0f       	add	r30, r25
     e5e:	ff 27       	eor	r31, r31
     e60:	e2 55       	subi	r30, 0x52	; 82
     e62:	ff 4f       	sbci	r31, 0xFF	; 255
     e64:	99 27       	eor	r25, r25
     e66:	33 27       	eor	r19, r19
     e68:	ee 24       	eor	r14, r14
     e6a:	ff 24       	eor	r15, r15
     e6c:	a7 01       	movw	r20, r14
     e6e:	e7 01       	movw	r28, r14
     e70:	05 90       	lpm	r0, Z+
     e72:	08 94       	sec
     e74:	07 94       	ror	r0
     e76:	28 f4       	brcc	.+10     	; 0xe82 <__ftoa_engine+0x80>
     e78:	36 0f       	add	r19, r22
     e7a:	e7 1e       	adc	r14, r23
     e7c:	f8 1e       	adc	r15, r24
     e7e:	49 1f       	adc	r20, r25
     e80:	51 1d       	adc	r21, r1
     e82:	66 0f       	add	r22, r22
     e84:	77 1f       	adc	r23, r23
     e86:	88 1f       	adc	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	06 94       	lsr	r0
     e8c:	a1 f7       	brne	.-24     	; 0xe76 <__ftoa_engine+0x74>
     e8e:	05 90       	lpm	r0, Z+
     e90:	07 94       	ror	r0
     e92:	28 f4       	brcc	.+10     	; 0xe9e <__ftoa_engine+0x9c>
     e94:	e7 0e       	add	r14, r23
     e96:	f8 1e       	adc	r15, r24
     e98:	49 1f       	adc	r20, r25
     e9a:	56 1f       	adc	r21, r22
     e9c:	c1 1d       	adc	r28, r1
     e9e:	77 0f       	add	r23, r23
     ea0:	88 1f       	adc	r24, r24
     ea2:	99 1f       	adc	r25, r25
     ea4:	66 1f       	adc	r22, r22
     ea6:	06 94       	lsr	r0
     ea8:	a1 f7       	brne	.-24     	; 0xe92 <__ftoa_engine+0x90>
     eaa:	05 90       	lpm	r0, Z+
     eac:	07 94       	ror	r0
     eae:	28 f4       	brcc	.+10     	; 0xeba <__ftoa_engine+0xb8>
     eb0:	f8 0e       	add	r15, r24
     eb2:	49 1f       	adc	r20, r25
     eb4:	56 1f       	adc	r21, r22
     eb6:	c7 1f       	adc	r28, r23
     eb8:	d1 1d       	adc	r29, r1
     eba:	88 0f       	add	r24, r24
     ebc:	99 1f       	adc	r25, r25
     ebe:	66 1f       	adc	r22, r22
     ec0:	77 1f       	adc	r23, r23
     ec2:	06 94       	lsr	r0
     ec4:	a1 f7       	brne	.-24     	; 0xeae <__ftoa_engine+0xac>
     ec6:	05 90       	lpm	r0, Z+
     ec8:	07 94       	ror	r0
     eca:	20 f4       	brcc	.+8      	; 0xed4 <__ftoa_engine+0xd2>
     ecc:	49 0f       	add	r20, r25
     ece:	56 1f       	adc	r21, r22
     ed0:	c7 1f       	adc	r28, r23
     ed2:	d8 1f       	adc	r29, r24
     ed4:	99 0f       	add	r25, r25
     ed6:	66 1f       	adc	r22, r22
     ed8:	77 1f       	adc	r23, r23
     eda:	88 1f       	adc	r24, r24
     edc:	06 94       	lsr	r0
     ede:	a9 f7       	brne	.-22     	; 0xeca <__ftoa_engine+0xc8>
     ee0:	84 91       	lpm	r24, Z
     ee2:	10 95       	com	r17
     ee4:	17 70       	andi	r17, 0x07	; 7
     ee6:	41 f0       	breq	.+16     	; 0xef8 <__ftoa_engine+0xf6>
     ee8:	d6 95       	lsr	r29
     eea:	c7 95       	ror	r28
     eec:	57 95       	ror	r21
     eee:	47 95       	ror	r20
     ef0:	f7 94       	ror	r15
     ef2:	e7 94       	ror	r14
     ef4:	1a 95       	dec	r17
     ef6:	c1 f7       	brne	.-16     	; 0xee8 <__ftoa_engine+0xe6>
     ef8:	e4 e5       	ldi	r30, 0x54	; 84
     efa:	f0 e0       	ldi	r31, 0x00	; 0
     efc:	68 94       	set
     efe:	15 90       	lpm	r1, Z+
     f00:	15 91       	lpm	r17, Z+
     f02:	35 91       	lpm	r19, Z+
     f04:	65 91       	lpm	r22, Z+
     f06:	95 91       	lpm	r25, Z+
     f08:	05 90       	lpm	r0, Z+
     f0a:	7f e2       	ldi	r23, 0x2F	; 47
     f0c:	73 95       	inc	r23
     f0e:	e1 18       	sub	r14, r1
     f10:	f1 0a       	sbc	r15, r17
     f12:	43 0b       	sbc	r20, r19
     f14:	56 0b       	sbc	r21, r22
     f16:	c9 0b       	sbc	r28, r25
     f18:	d0 09       	sbc	r29, r0
     f1a:	c0 f7       	brcc	.-16     	; 0xf0c <__ftoa_engine+0x10a>
     f1c:	e1 0c       	add	r14, r1
     f1e:	f1 1e       	adc	r15, r17
     f20:	43 1f       	adc	r20, r19
     f22:	56 1f       	adc	r21, r22
     f24:	c9 1f       	adc	r28, r25
     f26:	d0 1d       	adc	r29, r0
     f28:	7e f4       	brtc	.+30     	; 0xf48 <__ftoa_engine+0x146>
     f2a:	70 33       	cpi	r23, 0x30	; 48
     f2c:	11 f4       	brne	.+4      	; 0xf32 <__ftoa_engine+0x130>
     f2e:	8a 95       	dec	r24
     f30:	e6 cf       	rjmp	.-52     	; 0xefe <__ftoa_engine+0xfc>
     f32:	e8 94       	clt
     f34:	01 50       	subi	r16, 0x01	; 1
     f36:	30 f0       	brcs	.+12     	; 0xf44 <__ftoa_engine+0x142>
     f38:	08 0f       	add	r16, r24
     f3a:	0a f4       	brpl	.+2      	; 0xf3e <__ftoa_engine+0x13c>
     f3c:	00 27       	eor	r16, r16
     f3e:	02 17       	cp	r16, r18
     f40:	08 f4       	brcc	.+2      	; 0xf44 <__ftoa_engine+0x142>
     f42:	20 2f       	mov	r18, r16
     f44:	23 95       	inc	r18
     f46:	02 2f       	mov	r16, r18
     f48:	7a 33       	cpi	r23, 0x3A	; 58
     f4a:	28 f0       	brcs	.+10     	; 0xf56 <__ftoa_engine+0x154>
     f4c:	79 e3       	ldi	r23, 0x39	; 57
     f4e:	7d 93       	st	X+, r23
     f50:	2a 95       	dec	r18
     f52:	e9 f7       	brne	.-6      	; 0xf4e <__ftoa_engine+0x14c>
     f54:	10 c0       	rjmp	.+32     	; 0xf76 <__ftoa_engine+0x174>
     f56:	7d 93       	st	X+, r23
     f58:	2a 95       	dec	r18
     f5a:	89 f6       	brne	.-94     	; 0xefe <__ftoa_engine+0xfc>
     f5c:	06 94       	lsr	r0
     f5e:	97 95       	ror	r25
     f60:	67 95       	ror	r22
     f62:	37 95       	ror	r19
     f64:	17 95       	ror	r17
     f66:	17 94       	ror	r1
     f68:	e1 18       	sub	r14, r1
     f6a:	f1 0a       	sbc	r15, r17
     f6c:	43 0b       	sbc	r20, r19
     f6e:	56 0b       	sbc	r21, r22
     f70:	c9 0b       	sbc	r28, r25
     f72:	d0 09       	sbc	r29, r0
     f74:	98 f0       	brcs	.+38     	; 0xf9c <__ftoa_engine+0x19a>
     f76:	23 95       	inc	r18
     f78:	7e 91       	ld	r23, -X
     f7a:	73 95       	inc	r23
     f7c:	7a 33       	cpi	r23, 0x3A	; 58
     f7e:	08 f0       	brcs	.+2      	; 0xf82 <__ftoa_engine+0x180>
     f80:	70 e3       	ldi	r23, 0x30	; 48
     f82:	7c 93       	st	X, r23
     f84:	20 13       	cpse	r18, r16
     f86:	b8 f7       	brcc	.-18     	; 0xf76 <__ftoa_engine+0x174>
     f88:	7e 91       	ld	r23, -X
     f8a:	70 61       	ori	r23, 0x10	; 16
     f8c:	7d 93       	st	X+, r23
     f8e:	30 f0       	brcs	.+12     	; 0xf9c <__ftoa_engine+0x19a>
     f90:	83 95       	inc	r24
     f92:	71 e3       	ldi	r23, 0x31	; 49
     f94:	7d 93       	st	X+, r23
     f96:	70 e3       	ldi	r23, 0x30	; 48
     f98:	2a 95       	dec	r18
     f9a:	e1 f7       	brne	.-8      	; 0xf94 <__ftoa_engine+0x192>
     f9c:	11 24       	eor	r1, r1
     f9e:	ef 90       	pop	r14
     fa0:	ff 90       	pop	r15
     fa2:	0f 91       	pop	r16
     fa4:	1f 91       	pop	r17
     fa6:	cf 91       	pop	r28
     fa8:	df 91       	pop	r29
     faa:	99 27       	eor	r25, r25
     fac:	87 fd       	sbrc	r24, 7
     fae:	90 95       	com	r25
     fb0:	08 95       	ret

00000fb2 <__prologue_saves__>:
     fb2:	2f 92       	push	r2
     fb4:	3f 92       	push	r3
     fb6:	4f 92       	push	r4
     fb8:	5f 92       	push	r5
     fba:	6f 92       	push	r6
     fbc:	7f 92       	push	r7
     fbe:	8f 92       	push	r8
     fc0:	9f 92       	push	r9
     fc2:	af 92       	push	r10
     fc4:	bf 92       	push	r11
     fc6:	cf 92       	push	r12
     fc8:	df 92       	push	r13
     fca:	ef 92       	push	r14
     fcc:	ff 92       	push	r15
     fce:	0f 93       	push	r16
     fd0:	1f 93       	push	r17
     fd2:	cf 93       	push	r28
     fd4:	df 93       	push	r29
     fd6:	cd b7       	in	r28, 0x3d	; 61
     fd8:	de b7       	in	r29, 0x3e	; 62
     fda:	ca 1b       	sub	r28, r26
     fdc:	db 0b       	sbc	r29, r27
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	f8 94       	cli
     fe2:	de bf       	out	0x3e, r29	; 62
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	cd bf       	out	0x3d, r28	; 61
     fe8:	09 94       	ijmp

00000fea <__epilogue_restores__>:
     fea:	2a 88       	ldd	r2, Y+18	; 0x12
     fec:	39 88       	ldd	r3, Y+17	; 0x11
     fee:	48 88       	ldd	r4, Y+16	; 0x10
     ff0:	5f 84       	ldd	r5, Y+15	; 0x0f
     ff2:	6e 84       	ldd	r6, Y+14	; 0x0e
     ff4:	7d 84       	ldd	r7, Y+13	; 0x0d
     ff6:	8c 84       	ldd	r8, Y+12	; 0x0c
     ff8:	9b 84       	ldd	r9, Y+11	; 0x0b
     ffa:	aa 84       	ldd	r10, Y+10	; 0x0a
     ffc:	b9 84       	ldd	r11, Y+9	; 0x09
     ffe:	c8 84       	ldd	r12, Y+8	; 0x08
    1000:	df 80       	ldd	r13, Y+7	; 0x07
    1002:	ee 80       	ldd	r14, Y+6	; 0x06
    1004:	fd 80       	ldd	r15, Y+5	; 0x05
    1006:	0c 81       	ldd	r16, Y+4	; 0x04
    1008:	1b 81       	ldd	r17, Y+3	; 0x03
    100a:	aa 81       	ldd	r26, Y+2	; 0x02
    100c:	b9 81       	ldd	r27, Y+1	; 0x01
    100e:	ce 0f       	add	r28, r30
    1010:	d1 1d       	adc	r29, r1
    1012:	0f b6       	in	r0, 0x3f	; 63
    1014:	f8 94       	cli
    1016:	de bf       	out	0x3e, r29	; 62
    1018:	0f be       	out	0x3f, r0	; 63
    101a:	cd bf       	out	0x3d, r28	; 61
    101c:	ed 01       	movw	r28, r26
    101e:	08 95       	ret

00001020 <_exit>:
    1020:	f8 94       	cli

00001022 <__stop_program>:
    1022:	ff cf       	rjmp	.-2      	; 0x1022 <__stop_program>
